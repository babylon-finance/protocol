{
  "address": "0x092e616D9d1f8e7d1E7BcAa9a99cF0a3bc8DC952",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_action",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_pauseState",
          "type": "bool"
        }
      ],
      "name": "ActionPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_action",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_pauseState",
          "type": "bool"
        }
      ],
      "name": "ActionPausedIndividually",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_integration",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "_integrationName",
          "type": "string"
        }
      ],
      "name": "ControllerIntegrationAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newIntegration",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "_integrationName",
          "type": "string"
        }
      ],
      "name": "ControllerIntegrationEdited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_integration",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "_integrationName",
          "type": "string"
        }
      ],
      "name": "ControllerIntegrationRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "_kind",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "ControllerOperationSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_garden",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "GardenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_gardenFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldGardenFactory",
          "type": "address"
        }
      ],
      "name": "GardenFactoryChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newGardenNFT",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldStrategyNFT",
          "type": "address"
        }
      ],
      "name": "GardenNFTChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_garden",
          "type": "address"
        }
      ],
      "name": "GardenRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_gardenValuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldGardenValuer",
          "type": "address"
        }
      ],
      "name": "GardenValuerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newIshtarGate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldIshtarGate",
          "type": "address"
        }
      ],
      "name": "IshtarGateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_resesrveAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newMinLiquidityReserve",
          "type": "uint256"
        }
      ],
      "name": "LiquidityMinimumEdited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newMardukGate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldMardukGate",
          "type": "address"
        }
      ],
      "name": "MardukGateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newTradeIntegration",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldTradeIntegration",
          "type": "address"
        }
      ],
      "name": "MasterSwapperChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldPauseGuardian",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newPauseGuardian",
          "type": "address"
        }
      ],
      "name": "NewPauseGuardian",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_priceOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldPriceOracle",
          "type": "address"
        }
      ],
      "name": "PriceOracleChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_reserveAsset",
          "type": "address"
        }
      ],
      "name": "ReserveAssetAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_reserveAsset",
          "type": "address"
        }
      ],
      "name": "ReserveAssetRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_rewardsDistributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldRewardsDistributor",
          "type": "address"
        }
      ],
      "name": "RewardsDistributorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_strategyFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldStrategyFactory",
          "type": "address"
        }
      ],
      "name": "StrategyFactoryEdited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newStrategyNFT",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldStrategyNFT",
          "type": "address"
        }
      ],
      "name": "StrategyNFTChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newTreasury",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldTreasury",
          "type": "address"
        }
      ],
      "name": "TreasuryChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_newUniswapFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldUniswapFactory",
          "type": "address"
        }
      ],
      "name": "UniswapFactoryChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_OPERATIONS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "addKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_keepers",
          "type": "address[]"
        }
      ],
      "name": "addKeepers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserveAsset",
          "type": "address"
        }
      ],
      "name": "addReserveAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowPublicGardens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "assetWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bablMiningProgramEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserveAsset",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_seed",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_gardenParams",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_initialContribution",
          "type": "uint256"
        },
        {
          "internalType": "bool[]",
          "name": "_publicGardenStrategistsStewards",
          "type": "bool[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_profitSharing",
          "type": "uint256[]"
        }
      ],
      "name": "createGarden",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newGardenFactory",
          "type": "address"
        }
      ],
      "name": "editGardenFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newGardenNFT",
          "type": "address"
        }
      ],
      "name": "editGardenNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gardenValuer",
          "type": "address"
        }
      ],
      "name": "editGardenValuer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ishtarGate",
          "type": "address"
        }
      ],
      "name": "editIshtarGate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newMinLiquidityReserve",
          "type": "uint256"
        }
      ],
      "name": "editLiquidityReserve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mardukGate",
          "type": "address"
        }
      ],
      "name": "editMardukGate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceOracle",
          "type": "address"
        }
      ],
      "name": "editPriceOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newRewardsDistributor",
          "type": "address"
        }
      ],
      "name": "editRewardsDistributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newStrategyFactory",
          "type": "address"
        }
      ],
      "name": "editStrategyFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newStrategyNFT",
          "type": "address"
        }
      ],
      "name": "editStrategyNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newTreasury",
          "type": "address"
        }
      ],
      "name": "editTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableBABLMiningProgram",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableGardenTokensTransfers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "enabledOperations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gardenCreationIsOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gardenCreatorBonus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gardenFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gardenNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gardenTokensTransfersEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gardenValuer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gardens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBABLSharing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGardens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_size",
          "type": "uint256"
        }
      ],
      "name": "getLiveStrategies",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOperations",
      "outputs": [
        {
          "internalType": "address[20]",
          "name": "",
          "type": "address[20]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProfitSharing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserveAssets",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guardianGlobalPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "guardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_strategies",
          "type": "address[]"
        }
      ],
      "name": "isBetaStrategy",
      "outputs": [
        {
          "internalType": "bool[]",
          "name": "",
          "type": "bool[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isGarden",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "isSystemContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "isValidKeeper",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserveAsset",
          "type": "address"
        }
      ],
      "name": "isValidReserveAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ishtarGate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "keeperList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpsBABLPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpsProfitPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mardukGate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "masterSwapper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxContributorsPerGarden",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minLiquidityPerReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openPublicGardenCreation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolManagementFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolPerformanceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_garden",
          "type": "address"
        }
      ],
      "name": "removeGarden",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "removeKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserveAsset",
          "type": "address"
        }
      ],
      "name": "removeReserveAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "reserveAssets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsDistributor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setAllowPublicGardens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_state",
          "type": "bool"
        }
      ],
      "name": "setGlobalPause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newDefaultMasterSwapper",
          "type": "address"
        }
      ],
      "name": "setMasterSwapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newMax",
          "type": "uint256"
        }
      ],
      "name": "setMaxContributorsPerGarden",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_kind",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_operation",
          "type": "address"
        }
      ],
      "name": "setOperation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_guardian",
          "type": "address"
        }
      ],
      "name": "setPauseGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_address",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "_state",
          "type": "bool"
        }
      ],
      "name": "setSomePause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stewardsBABLPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stewardsProfitPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategistBABLPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategistProfitPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "validReserveAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb897fa60d664d7c0422fe3c6db896446eeb215554131e011aad826e640b8450e",
  "receipt": {
    "to": null,
    "from": "0x040cC3AF8455F3c34D1df1D2a305e047a062BeBf",
    "contractAddress": "0x092e616D9d1f8e7d1E7BcAa9a99cF0a3bc8DC952",
    "transactionIndex": 169,
    "gasUsed": "5251232",
    "logsBloom": "0x
    "blockHash": "0x423d59927987a2f9307b152741461fb8df9c22c577399c8228c9ba9d6ce90cc5",
    "transactionHash": "0xb897fa60d664d7c0422fe3c6db896446eeb215554131e011aad826e640b8450e",
    "logs": [],
    "blockNumber": 13374846,
    "cumulativeGasUsed": "17664843",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "e53accb2808604d2b3f86cc8869bf6ae",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_pauseState\",\"type\":\"bool\"}],\"name\":\"ActionPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_pauseState\",\"type\":\"bool\"}],\"name\":\"ActionPausedIndividually\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_integration\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_integrationName\",\"type\":\"string\"}],\"name\":\"ControllerIntegrationAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newIntegration\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_integrationName\",\"type\":\"string\"}],\"name\":\"ControllerIntegrationEdited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_integration\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_integrationName\",\"type\":\"string\"}],\"name\":\"ControllerIntegrationRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"_kind\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"ControllerOperationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_garden\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"GardenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_gardenFactory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldGardenFactory\",\"type\":\"address\"}],\"name\":\"GardenFactoryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newGardenNFT\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldStrategyNFT\",\"type\":\"address\"}],\"name\":\"GardenNFTChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_garden\",\"type\":\"address\"}],\"name\":\"GardenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_gardenValuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldGardenValuer\",\"type\":\"address\"}],\"name\":\"GardenValuerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newIshtarGate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldIshtarGate\",\"type\":\"address\"}],\"name\":\"IshtarGateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_resesrveAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newMinLiquidityReserve\",\"type\":\"uint256\"}],\"name\":\"LiquidityMinimumEdited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newMardukGate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldMardukGate\",\"type\":\"address\"}],\"name\":\"MardukGateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newTradeIntegration\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldTradeIntegration\",\"type\":\"address\"}],\"name\":\"MasterSwapperChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldPauseGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newPauseGuardian\",\"type\":\"address\"}],\"name\":\"NewPauseGuardian\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldPriceOracle\",\"type\":\"address\"}],\"name\":\"PriceOracleChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_reserveAsset\",\"type\":\"address\"}],\"name\":\"ReserveAssetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_reserveAsset\",\"type\":\"address\"}],\"name\":\"ReserveAssetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_rewardsDistributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldRewardsDistributor\",\"type\":\"address\"}],\"name\":\"RewardsDistributorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_strategyFactory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldStrategyFactory\",\"type\":\"address\"}],\"name\":\"StrategyFactoryEdited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newStrategyNFT\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldStrategyNFT\",\"type\":\"address\"}],\"name\":\"StrategyNFTChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldTreasury\",\"type\":\"address\"}],\"name\":\"TreasuryChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newUniswapFactory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldUniswapFactory\",\"type\":\"address\"}],\"name\":\"UniswapFactoryChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_OPERATIONS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"addKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_keepers\",\"type\":\"address[]\"}],\"name\":\"addKeepers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserveAsset\",\"type\":\"address\"}],\"name\":\"addReserveAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowPublicGardens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"assetWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bablMiningProgramEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserveAsset\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_gardenParams\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_initialContribution\",\"type\":\"uint256\"},{\"internalType\":\"bool[]\",\"name\":\"_publicGardenStrategistsStewards\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_profitSharing\",\"type\":\"uint256[]\"}],\"name\":\"createGarden\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGardenFactory\",\"type\":\"address\"}],\"name\":\"editGardenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGardenNFT\",\"type\":\"address\"}],\"name\":\"editGardenNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gardenValuer\",\"type\":\"address\"}],\"name\":\"editGardenValuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ishtarGate\",\"type\":\"address\"}],\"name\":\"editIshtarGate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newMinLiquidityReserve\",\"type\":\"uint256\"}],\"name\":\"editLiquidityReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mardukGate\",\"type\":\"address\"}],\"name\":\"editMardukGate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceOracle\",\"type\":\"address\"}],\"name\":\"editPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRewardsDistributor\",\"type\":\"address\"}],\"name\":\"editRewardsDistributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newStrategyFactory\",\"type\":\"address\"}],\"name\":\"editStrategyFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newStrategyNFT\",\"type\":\"address\"}],\"name\":\"editStrategyNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"editTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableBABLMiningProgram\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableGardenTokensTransfers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"enabledOperations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gardenCreationIsOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gardenCreatorBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gardenFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gardenNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gardenTokensTransfersEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gardenValuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gardens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBABLSharing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGardens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_size\",\"type\":\"uint256\"}],\"name\":\"getLiveStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOperations\",\"outputs\":[{\"internalType\":\"address[20]\",\"name\":\"\",\"type\":\"address[20]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProfitSharing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardianGlobalPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"guardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_strategies\",\"type\":\"address[]\"}],\"name\":\"isBetaStrategy\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isGarden\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"isSystemContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"isValidKeeper\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserveAsset\",\"type\":\"address\"}],\"name\":\"isValidReserveAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ishtarGate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"keeperList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpsBABLPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpsProfitPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mardukGate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxContributorsPerGarden\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minLiquidityPerReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openPublicGardenCreation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolManagementFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolPerformanceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_garden\",\"type\":\"address\"}],\"name\":\"removeGarden\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"}],\"name\":\"removeKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserveAsset\",\"type\":\"address\"}],\"name\":\"removeReserveAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reserveAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDistributor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setAllowPublicGardens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setGlobalPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newDefaultMasterSwapper\",\"type\":\"address\"}],\"name\":\"setMasterSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMax\",\"type\":\"uint256\"}],\"name\":\"setMaxContributorsPerGarden\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_operation\",\"type\":\"address\"}],\"name\":\"setOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_guardian\",\"type\":\"address\"}],\"name\":\"setPauseGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setSomePause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stewardsBABLPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stewardsProfitPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategistBABLPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategistProfitPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"validReserveAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addKeeper(address)\":{\"params\":{\"_keeper\":\"Address of the keeper\"}},\"addKeepers(address[])\":{\"params\":{\"_keepers\":\"List with keeprs of the assets to whitelist\"}},\"addReserveAsset(address)\":{\"params\":{\"_reserveAsset\":\"Address of the reserve assset\"}},\"createGarden(address,string,string,string,uint256,uint256[],uint256,bool[],uint256[])\":{\"params\":{\"_gardenParams\":\"Array of numeric garden params\",\"_initialContribution\":\"Initial contribution by the gardener\",\"_name\":\"Name of the Garden\",\"_profitSharing\":\"Custom profit sharing (if any)\",\"_publicGardenStrategistsStewards\":\"Public garden, public strategist rights and public stewards rights\",\"_reserveAsset\":\"Reserve asset of the Garden. Initially just weth\",\"_seed\":\"Seed to regenerate the garden NFT\",\"_symbol\":\"Symbol of the Garden\",\"_tokenURI\":\"Garden NFT token URI\"}},\"editGardenFactory(address)\":{\"params\":{\"_newGardenFactory\":\"Address of the new garden factory\"}},\"editGardenNFT(address)\":{\"params\":{\"_newGardenNFT\":\"Address of the new garden NFT\"}},\"editGardenValuer(address)\":{\"params\":{\"_gardenValuer\":\"Address of the new garden valuer\"}},\"editIshtarGate(address)\":{\"params\":{\"_ishtarGate\":\"Address of the new Ishtar Gate\"}},\"editLiquidityReserve(address,uint256)\":{\"params\":{\"_newMinLiquidityReserve\":\"Absolute min liquidity of an asset to grab price\",\"_reserve\":\"Address of the reserve to edit\"}},\"editMardukGate(address)\":{\"params\":{\"_mardukGate\":\"Address of the new Marduk Gate\"}},\"editPriceOracle(address)\":{\"params\":{\"_priceOracle\":\"Address of the new price oracle\"}},\"editRewardsDistributor(address)\":{\"params\":{\"_newRewardsDistributor\":\"Address of the new rewards distributor\"}},\"editStrategyFactory(address)\":{\"params\":{\"_newStrategyFactory\":\"Address of the new strategy factory\"}},\"editStrategyNFT(address)\":{\"params\":{\"_newStrategyNFT\":\"Address of the new strategy NFT\"}},\"editTreasury(address)\":{\"params\":{\"_newTreasury\":\"Address of the new protocol fee recipient\"}},\"getBABLSharing()\":{\"returns\":{\"_0\":\"Strategist, Stewards, Lps, creator bonus\"}},\"getProfitSharing()\":{\"returns\":{\"_0\":\"Strategist, Stewards, Lps, creator bonus\"}},\"isBetaStrategy(address[])\":{\"params\":{\"_strategies\":\"Smartcontract address to check for a global or specific pause\"}},\"isPaused(address)\":{\"params\":{\"_contract\":\"Smartcontract address to check for a global or specific pause\"}},\"isSystemContract(address)\":{\"params\":{\"_contractAddress\":\"The contract address to check\"}},\"removeGarden(address)\":{\"params\":{\"_garden\":\"Address of the Garden contract to remove\"}},\"removeKeeper(address)\":{\"params\":{\"_keeper\":\"Address of the keeper\"}},\"removeReserveAsset(address)\":{\"params\":{\"_reserveAsset\":\"Address of the reserve asset to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setGlobalPause(bool)\":{\"params\":{\"_state\":\"True to pause, false to unpause.\"}},\"setMasterSwapper(address)\":{\"params\":{\"_newDefaultMasterSwapper\":\"Address of the new default trade integration\"}},\"setOperation(uint8,address)\":{\"params\":{\"_kind\":\"Operation kind\",\"_operation\":\"Address of the operation contract to set\"}},\"setPauseGuardian(address)\":{\"params\":{\"_guardian\":\"Address of the guardian\"}},\"setSomePause(address[],bool)\":{\"params\":{\"_address\":\"Addresses of protocol smartcontract to be paused\",\"_state\":\"Boolean pause state\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ActionPaused(string,bool)\":{\"notice\":\"Emitted when an action is paused globally\"},\"ActionPausedIndividually(string,address,bool)\":{\"notice\":\"Emitted when an action is paused individually\"},\"NewPauseGuardian(address,address)\":{\"notice\":\"Emitted when pause guardian is changed\"}},\"kind\":\"user\",\"methods\":{\"addKeeper(address)\":{\"notice\":\"PRIVILEGED FACTORY FUNCTION. Adds a new valid keeper to the list\"},\"addKeepers(address[])\":{\"notice\":\"PRIVILEGED FACTORY FUNCTION. Adds a list of assets to the whitelist\"},\"addReserveAsset(address)\":{\"notice\":\"PRIVILEGED FACTORY FUNCTION. Adds a new valid reserve asset for gardens\"},\"createGarden(address,string,string,string,uint256,uint256[],uint256,bool[],uint256[])\":{\"notice\":\"Creates a Garden smart contract and registers the Garden with the controller. If asset is not WETH, the creator needs to approve the controller\"},\"editGardenFactory(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol garden factory\"},\"editGardenNFT(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol garden NFT\"},\"editGardenValuer(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the garden valuer\"},\"editIshtarGate(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the Ishtar Gate Address\"},\"editLiquidityReserve(address,uint256)\":{\"notice\":\"GOVERNANCE FUNCTION: Edits the minimum liquidity an asset must have on Uniswap\"},\"editMardukGate(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the Marduk Gate Address\"},\"editPriceOracle(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the price oracle\"},\"editRewardsDistributor(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the rewards distributor\"},\"editStrategyFactory(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol strategy factory\"},\"editStrategyNFT(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol strategy NFT\"},\"editTreasury(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol fee recipient\"},\"enableBABLMiningProgram()\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Enable and starts the BABL Mining program by the Rewards Distributor Can only happen after public launch of the protocol.\"},\"enableGardenTokensTransfers()\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows transfers of ERC20 gardenTokens Can only happen after 2021 is finished.\"},\"getBABLSharing()\":{\"notice\":\"Returns the percentages of BABL Profit Sharing\"},\"getProfitSharing()\":{\"notice\":\"Returns the percentages of a strategy Profit Sharing\"},\"initialize()\":{\"notice\":\"Initializes the initial fee recipient on deployment.\"},\"isBetaStrategy(address[])\":{\"notice\":\"Check whether or not the strategies are beta protocol strategies deserving rewards\"},\"isPaused(address)\":{\"notice\":\"Check whether or not there is a global pause or a specific pause of the provided contract address\"},\"isSystemContract(address)\":{\"notice\":\"Check if a contract address is a garden or one of the system contracts\"},\"openPublicGardenCreation()\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to enable public creation of gardens\"},\"removeGarden(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to remove a Garden\"},\"removeKeeper(address)\":{\"notice\":\"PRIVILEGED FACTORY FUNCTION. Removes a keeper\"},\"removeReserveAsset(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to remove a reserve asset\"},\"setAllowPublicGardens()\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows public gardens\"},\"setGlobalPause(bool)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Pause the protocol globally in case of unexpected issue Only the governance can unpause it\"},\"setMasterSwapper(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol default trde integration\"},\"setMaxContributorsPerGarden(uint256)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Change the max number of contributors for new Gardens since the change\"},\"setOperation(uint8,address)\":{\"notice\":\"GOVERNANCE FUNCTION: Edit an existing operation on the registry\"},\"setPauseGuardian(address)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Set-up a pause guardian\"},\"setSomePause(address[],bool)\":{\"notice\":\"PRIVILEGED GOVERNANCE FUNCTION. Pause some smartcontracts in a batch process in case of unexpected issue Only the governance can unpause it\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BabController.sol\":\"BabControllerV7\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/Initializable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xb419e68addcb82ecda3ad3974b0d2db76435ce9b08435a04d5b119a0c5d45ea5\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity >=0.4.24 <0.8.0;\\n\\nimport \\\"../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || _isConstructor() || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /// @dev Returns true if and only if the function is running in the constructor\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\nimport \\\"../proxy/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"contracts/BabController.sol\":{\"content\":\"/*\\n    Copyright 2021 Babylon Finance\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\n\\npragma solidity 0.7.6;\\nimport {OwnableUpgradeable} from '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport {AddressUpgradeable} from '@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol';\\nimport {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport {SafeERC20} from '@openzeppelin/contracts/token/ERC20/SafeERC20.sol';\\n\\nimport {IRewardsDistributor} from './interfaces/IRewardsDistributor.sol';\\nimport {IGarden} from './interfaces/IGarden.sol';\\nimport {IGardenFactory} from './interfaces/IGardenFactory.sol';\\nimport {IStrategy} from './interfaces/IStrategy.sol';\\nimport {IIshtarGate} from './interfaces/IIshtarGate.sol';\\nimport {IIntegration} from './interfaces/IIntegration.sol';\\nimport {IBabController} from './interfaces/IBabController.sol';\\n\\nimport {AddressArrayUtils} from './lib/AddressArrayUtils.sol';\\nimport {LowGasSafeMath} from './lib/LowGasSafeMath.sol';\\n\\n/**\\n * @title BabController\\n * @author Babylon Finance Protocol\\n *\\n * BabController is a smart contract used to deploy new gardens contracts and house the\\n * integrations and resources of the system.\\n */\\ncontract BabController is OwnableUpgradeable, IBabController {\\n    using AddressArrayUtils for address[];\\n    using AddressUpgradeable for address;\\n    using LowGasSafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n\\n    /* ============ Events ============ */\\n    event GardenAdded(address indexed _garden, address indexed _factory);\\n    event GardenRemoved(address indexed _garden);\\n\\n    event ControllerIntegrationAdded(address _integration, string indexed _integrationName);\\n    event ControllerIntegrationRemoved(address _integration, string indexed _integrationName);\\n    event ControllerIntegrationEdited(address _newIntegration, string indexed _integrationName);\\n    event ControllerOperationSet(uint8 indexed _kind, address _address);\\n    event MasterSwapperChanged(address indexed _newTradeIntegration, address _oldTradeIntegration);\\n\\n    event ReserveAssetAdded(address indexed _reserveAsset);\\n    event ReserveAssetRemoved(address indexed _reserveAsset);\\n    event LiquidityMinimumEdited(address indexed _resesrveAsset, uint256 _newMinLiquidityReserve);\\n\\n    event PriceOracleChanged(address indexed _priceOracle, address _oldPriceOracle);\\n    event RewardsDistributorChanged(address indexed _rewardsDistributor, address _oldRewardsDistributor);\\n    event TreasuryChanged(address _newTreasury, address _oldTreasury);\\n    event IshtarGateChanged(address _newIshtarGate, address _oldIshtarGate);\\n    event MardukGateChanged(address _newMardukGate, address _oldMardukGate);\\n    event GardenValuerChanged(address indexed _gardenValuer, address _oldGardenValuer);\\n    event GardenFactoryChanged(address indexed _gardenFactory, address _oldGardenFactory);\\n    event UniswapFactoryChanged(address indexed _newUniswapFactory, address _oldUniswapFactory);\\n    event GardenNFTChanged(address indexed _newGardenNFT, address _oldStrategyNFT);\\n    event StrategyNFTChanged(address indexed _newStrategyNFT, address _oldStrategyNFT);\\n\\n    event StrategyFactoryEdited(address indexed _strategyFactory, address _oldStrategyFactory);\\n\\n    /// @notice Emitted when pause guardian is changed\\n    event NewPauseGuardian(address _oldPauseGuardian, address _newPauseGuardian);\\n\\n    /// @notice Emitted when an action is paused globally\\n    event ActionPaused(string _action, bool _pauseState);\\n\\n    /// @notice Emitted when an action is paused individually\\n    event ActionPausedIndividually(string _action, address _address, bool _pauseState);\\n\\n    /* ============ Modifiers ============ */\\n\\n    /* ============ State Variables ============ */\\n\\n    address public constant WETH = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n    uint8 public constant MAX_OPERATIONS = 20;\\n\\n    // List of enabled Communities\\n    address[] public gardens;\\n    address[] public reserveAssets;\\n    address private uniswapFactory; // do not use\\n    address public override gardenValuer;\\n    address public override priceOracle;\\n    address public override gardenFactory;\\n    address public override rewardsDistributor;\\n    address public override ishtarGate;\\n    address public override strategyFactory;\\n    address public override gardenNFT;\\n    address public override strategyNFT;\\n\\n    // Mapping of integration name => integration address\\n    mapping(bytes32 => address) private enabledIntegrations; // DEPRECATED\\n    // Address of the master swapper used by the protocol\\n    address public override masterSwapper;\\n    // Mapping of valid operations\\n    address[MAX_OPERATIONS] public override enabledOperations;\\n\\n    // Mappings to check whether address is valid Garden or Reserve Asset\\n    mapping(address => bool) public override isGarden;\\n    mapping(address => bool) public validReserveAsset;\\n\\n    // Mapping to check whitelisted assets\\n    mapping(address => bool) public assetWhitelist;\\n\\n    // Mapping to check keepers\\n    mapping(address => bool) public keeperList;\\n\\n    // Mapping of minimum liquidity per reserve asset\\n    mapping(address => uint256) public override minLiquidityPerReserve;\\n\\n    // Recipient of protocol fees\\n    address public override treasury;\\n\\n    // Strategy Profit Sharing\\n    uint256 public strategistProfitPercentage; // (0.01% = 1e14, 1% = 1e16)\\n    uint256 public stewardsProfitPercentage; // (0.01% = 1e14, 1% = 1e16)\\n    uint256 public lpsProfitPercentage; //\\n\\n    // Strategy BABL Rewards Sharing\\n    uint256 public strategistBABLPercentage; // (0.01% = 1e14, 1% = 1e16)\\n    uint256 public stewardsBABLPercentage; // (0.01% = 1e14, 1% = 1e16)\\n    uint256 public lpsBABLPercentage; //\\n\\n    uint256 public gardenCreatorBonus;\\n\\n    // Assets\\n\\n    // Enable Transfer of ERC20 gardenTokens\\n    // Only members can transfer tokens until the protocol is fully decentralized\\n    bool public override gardenTokensTransfersEnabled;\\n\\n    // Enable and starts the BABL Mining program within Rewards Distributor contract\\n    bool public override bablMiningProgramEnabled;\\n    // Enable public gardens\\n    bool public override allowPublicGardens;\\n\\n    uint256 public override protocolPerformanceFee; // 5% (0.01% = 1e14, 1% = 1e16) on profits\\n    uint256 public override protocolManagementFee; // 0.5% (0.01% = 1e14, 1% = 1e16)\\n    uint256 private protocolDepositGardenTokenFee; // 0 (0.01% = 1e14, 1% = 1e16)\\n    uint256 private protocolWithdrawalGardenTokenFee; // 0 (0.01% = 1e14, 1% = 1e16)\\n\\n    // Maximum number of contributors per garden\\n    uint256 public override maxContributorsPerGarden;\\n\\n    // Enable garden creations to be fully open to the public (no need of Ishtar gate anymore)\\n    bool public override gardenCreationIsOpen;\\n\\n    // Pause Guardian\\n    address public guardian;\\n    mapping(address => bool) public override guardianPaused;\\n    bool public override guardianGlobalPaused;\\n    address public override mardukGate;\\n\\n    /* ============ Constructor ============ */\\n\\n    /**\\n     * Initializes the initial fee recipient on deployment.\\n     */\\n    function initialize() public {\\n        OwnableUpgradeable.__Ownable_init();\\n\\n        // vars init values has to be set in initialize due to how upgrade proxy pattern works\\n        protocolManagementFee = 5e15; // 0.5% (0.01% = 1e14, 1% = 1e16)\\n        protocolPerformanceFee = 5e16; // 5% (0.01% = 1e14, 1% = 1e16) on profits\\n        protocolDepositGardenTokenFee = 0; // 0% (0.01% = 1e14, 1% = 1e16) on profits\\n        protocolWithdrawalGardenTokenFee = 0; // 0% (0.01% = 1e14, 1% = 1e16) on profits\\n        strategistProfitPercentage = 10e16;\\n        stewardsProfitPercentage = 5e16;\\n        lpsProfitPercentage = 80e16;\\n\\n        strategistBABLPercentage = 8e16;\\n        stewardsBABLPercentage = 17e16;\\n        lpsBABLPercentage = 75e16;\\n\\n        gardenCreatorBonus = 15e16;\\n        maxContributorsPerGarden = 100;\\n        gardenCreationIsOpen = false;\\n    }\\n\\n    /* ============ External Functions ============ */\\n\\n    // ===========  Garden related Gov Functions ======\\n    /**\\n     * Creates a Garden smart contract and registers the Garden with the controller.\\n     *\\n     * If asset is not WETH, the creator needs to approve the controller\\n     * @param _reserveAsset                     Reserve asset of the Garden. Initially just weth\\n     * @param _name                             Name of the Garden\\n     * @param _symbol                           Symbol of the Garden\\n     * @param _gardenParams                     Array of numeric garden params\\n     * @param _tokenURI                         Garden NFT token URI\\n     * @param _seed                             Seed to regenerate the garden NFT\\n     * @param _initialContribution              Initial contribution by the gardener\\n     * @param _publicGardenStrategistsStewards  Public garden, public strategist rights and public stewards rights\\n     * @param _profitSharing                    Custom profit sharing (if any)\\n     */\\n    function createGarden(\\n        address _reserveAsset,\\n        string memory _name,\\n        string memory _symbol,\\n        string memory _tokenURI,\\n        uint256 _seed,\\n        uint256[] calldata _gardenParams,\\n        uint256 _initialContribution,\\n        bool[] memory _publicGardenStrategistsStewards,\\n        uint256[] memory _profitSharing\\n    ) external payable override returns (address) {\\n        require(masterSwapper != address(0), 'Need a default trade integration');\\n        require(enabledOperations.length > 0, 'Need operations enabled');\\n        require(\\n            IIshtarGate(mardukGate).canCreate(msg.sender) || gardenCreationIsOpen,\\n            'User does not have creation permissions'\\n        );\\n        address newGarden =\\n            IGardenFactory(gardenFactory).createGarden(\\n                _reserveAsset,\\n                msg.sender,\\n                _name,\\n                _symbol,\\n                _tokenURI,\\n                _seed,\\n                _gardenParams,\\n                _initialContribution,\\n                _publicGardenStrategistsStewards\\n            );\\n        if (_reserveAsset != WETH || msg.value == 0) {\\n            IERC20(_reserveAsset).safeTransferFrom(msg.sender, address(this), _initialContribution);\\n            IERC20(_reserveAsset).safeApprove(newGarden, _initialContribution);\\n        }\\n        require(!isGarden[newGarden], 'Garden already exists');\\n        isGarden[newGarden] = true;\\n        gardens.push(newGarden);\\n        IGarden(newGarden).deposit{value: msg.value}(_initialContribution, _initialContribution, msg.sender, true);\\n        // Avoid gas cost if default sharing values are provided (0,0,0)\\n        if (_profitSharing[0] != 0 || _profitSharing[1] != 0 || _profitSharing[2] != 0) {\\n            IRewardsDistributor(rewardsDistributor).setProfitRewards(\\n                newGarden,\\n                _profitSharing[0],\\n                _profitSharing[1],\\n                _profitSharing[2]\\n            );\\n        }\\n        emit GardenAdded(newGarden, msg.sender);\\n        return newGarden;\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to remove a Garden\\n     *\\n     * @param _garden               Address of the Garden contract to remove\\n     */\\n    function removeGarden(address _garden) external override onlyOwner {\\n        require(isGarden[_garden], 'Garden does not exist');\\n        require(IGarden(_garden).getStrategies().length == 0, 'Garden has active strategies!');\\n        gardens = gardens.remove(_garden);\\n        delete isGarden[_garden];\\n\\n        emit GardenRemoved(_garden);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to enable public creation of gardens\\n     *\\n     */\\n    function openPublicGardenCreation() external override onlyOwner {\\n        require(!gardenCreationIsOpen, 'Garden creation is already open to the public');\\n        gardenCreationIsOpen = true;\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows transfers of ERC20 gardenTokens\\n     * Can only happen after 2021 is finished.\\n     */\\n    function enableGardenTokensTransfers() external override onlyOwner {\\n        require(block.timestamp > 1641024000, 'Transfers cannot be enabled yet');\\n        gardenTokensTransfersEnabled = true;\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows public gardens\\n     */\\n    function setAllowPublicGardens() external override onlyOwner {\\n        allowPublicGardens = true;\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Change the max number of contributors for new Gardens since the change\\n     */\\n    function setMaxContributorsPerGarden(uint256 _newMax) external override onlyOwner {\\n        require(_newMax >= 1, 'Contributors cannot be less than 1 per garden');\\n        maxContributorsPerGarden = _newMax;\\n    }\\n\\n    // ===========  Protocol related Gov Functions ======\\n\\n    /**  PRIVILEGED GOVERNANCE FUNCTION. Enable and starts the BABL Mining program by the Rewards Distributor\\n     * Can only happen after public launch of the protocol.\\n     */\\n    function enableBABLMiningProgram() external override onlyOwner {\\n        if (bablMiningProgramEnabled == false) {\\n            // Can only be activated once\\n            bablMiningProgramEnabled = true;\\n            IRewardsDistributor(rewardsDistributor).startBABLRewards(); // Sets the timestamp\\n        }\\n    }\\n\\n    /**\\n     * PRIVILEGED FACTORY FUNCTION. Adds a new valid keeper to the list\\n     *\\n     * @param _keeper Address of the keeper\\n     */\\n    function addKeeper(address _keeper) external override onlyOwner {\\n        keeperList[_keeper] = true;\\n    }\\n\\n    /**\\n     * PRIVILEGED FACTORY FUNCTION. Removes a keeper\\n     *\\n     * @param _keeper Address of the keeper\\n     */\\n    function removeKeeper(address _keeper) external override onlyOwner {\\n        require(keeperList[_keeper], 'Keeper is whitelisted');\\n        delete keeperList[_keeper];\\n    }\\n\\n    /**\\n     * PRIVILEGED FACTORY FUNCTION. Adds a list of assets to the whitelist\\n     *\\n     * @param _keepers List with keeprs of the assets to whitelist\\n     */\\n    function addKeepers(address[] memory _keepers) external override onlyOwner {\\n        for (uint256 i = 0; i < _keepers.length; i++) {\\n            keeperList[_keepers[i]] = true;\\n        }\\n    }\\n\\n    /**\\n     * PRIVILEGED FACTORY FUNCTION. Adds a new valid reserve asset for gardens\\n     *\\n     * @param _reserveAsset Address of the reserve assset\\n     */\\n    function addReserveAsset(address _reserveAsset) external override onlyOwner {\\n        require(!validReserveAsset[_reserveAsset], 'Reserve asset already added');\\n        // TODO: check decimals reserve asset\\n        validReserveAsset[_reserveAsset] = true;\\n        reserveAssets.push(_reserveAsset);\\n        emit ReserveAssetAdded(_reserveAsset);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to remove a reserve asset\\n     *\\n     * @param _reserveAsset               Address of the reserve asset to remove\\n     */\\n    function removeReserveAsset(address _reserveAsset) external override onlyOwner {\\n        require(validReserveAsset[_reserveAsset], 'Reserve asset does not exist');\\n\\n        reserveAssets = reserveAssets.remove(_reserveAsset);\\n\\n        delete validReserveAsset[_reserveAsset];\\n\\n        emit ReserveAssetRemoved(_reserveAsset);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the price oracle\\n     *\\n     * @param _priceOracle               Address of the new price oracle\\n     */\\n    function editPriceOracle(address _priceOracle) external override onlyOwner {\\n        require(_priceOracle != priceOracle, 'Price oracle already exists');\\n\\n        require(_priceOracle != address(0), 'Price oracle must exist');\\n\\n        address oldPriceOracle = priceOracle;\\n        priceOracle = _priceOracle;\\n\\n        emit PriceOracleChanged(_priceOracle, oldPriceOracle);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the Ishtar Gate Address\\n     *\\n     * @param _ishtarGate               Address of the new Ishtar Gate\\n     */\\n    function editIshtarGate(address _ishtarGate) external override onlyOwner {\\n        require(_ishtarGate != ishtarGate, 'Ishtar Gate already exists');\\n\\n        require(_ishtarGate != address(0), 'Ishtar Gate oracle must exist');\\n\\n        address oldIshtarGate = ishtarGate;\\n        ishtarGate = _ishtarGate;\\n\\n        emit IshtarGateChanged(_ishtarGate, oldIshtarGate);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the Marduk Gate Address\\n     *\\n     * @param _mardukGate               Address of the new Marduk Gate\\n     */\\n    function editMardukGate(address _mardukGate) external override onlyOwner {\\n        require(_mardukGate != mardukGate, 'Marduk Gate already exists');\\n\\n        require(_mardukGate != address(0), 'Marduk Gate oracle must exist');\\n\\n        address oldMardukGate = mardukGate;\\n        mardukGate = _mardukGate;\\n\\n        emit MardukGateChanged(_mardukGate, oldMardukGate);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the garden valuer\\n     *\\n     * @param _gardenValuer Address of the new garden valuer\\n     */\\n    function editGardenValuer(address _gardenValuer) external override onlyOwner {\\n        require(_gardenValuer != gardenValuer, 'Garden Valuer already exists');\\n\\n        require(_gardenValuer != address(0), 'Garden Valuer must exist');\\n\\n        address oldGardenValuer = gardenValuer;\\n        gardenValuer = _gardenValuer;\\n\\n        emit GardenValuerChanged(_gardenValuer, oldGardenValuer);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol fee recipient\\n     *\\n     * @param _newTreasury      Address of the new protocol fee recipient\\n     */\\n    function editTreasury(address _newTreasury) external override onlyOwner {\\n        require(_newTreasury != address(0), 'Address must not be 0');\\n\\n        address oldTreasury = treasury;\\n        treasury = _newTreasury;\\n\\n        emit TreasuryChanged(_newTreasury, oldTreasury);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the rewards distributor\\n     *\\n     * @param _newRewardsDistributor      Address of the new rewards distributor\\n     */\\n    function editRewardsDistributor(address _newRewardsDistributor) external override onlyOwner {\\n        require(_newRewardsDistributor != address(0), 'Address must not be 0');\\n\\n        address oldRewardsDistributor = rewardsDistributor;\\n        rewardsDistributor = _newRewardsDistributor;\\n\\n        emit RewardsDistributorChanged(_newRewardsDistributor, oldRewardsDistributor);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol garden factory\\n     *\\n     * @param _newGardenFactory      Address of the new garden factory\\n     */\\n    function editGardenFactory(address _newGardenFactory) external override onlyOwner {\\n        require(_newGardenFactory != address(0), 'Address must not be 0');\\n\\n        address oldGardenFactory = gardenFactory;\\n        gardenFactory = _newGardenFactory;\\n\\n        emit GardenFactoryChanged(_newGardenFactory, oldGardenFactory);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol garden NFT\\n     *\\n     * @param _newGardenNFT      Address of the new garden NFT\\n     */\\n    function editGardenNFT(address _newGardenNFT) external override onlyOwner {\\n        require(_newGardenNFT != address(0), 'Address must not be 0');\\n\\n        address oldGardenNFT = gardenNFT;\\n        gardenNFT = _newGardenNFT;\\n\\n        emit GardenNFTChanged(_newGardenNFT, oldGardenNFT);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol strategy NFT\\n     *\\n     * @param _newStrategyNFT      Address of the new strategy NFT\\n     */\\n    function editStrategyNFT(address _newStrategyNFT) external override onlyOwner {\\n        require(_newStrategyNFT != address(0), 'Address must not be 0');\\n\\n        address oldStrategyNFT = strategyNFT;\\n        strategyNFT = _newStrategyNFT;\\n\\n        emit StrategyNFTChanged(_newStrategyNFT, oldStrategyNFT);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol strategy factory\\n     *\\n     * @param _newStrategyFactory      Address of the new strategy factory\\n     */\\n    function editStrategyFactory(address _newStrategyFactory) external override onlyOwner {\\n        require(_newStrategyFactory != address(0), 'Address must not be 0');\\n\\n        address oldStrategyFactory = strategyFactory;\\n        strategyFactory = _newStrategyFactory;\\n\\n        emit StrategyFactoryEdited(_newStrategyFactory, oldStrategyFactory);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol default trde integration\\n     *\\n     * @param _newDefaultMasterSwapper     Address of the new default trade integration\\n     */\\n    function setMasterSwapper(address _newDefaultMasterSwapper) external override onlyOwner {\\n        require(_newDefaultMasterSwapper != address(0), 'Address must not be 0');\\n        require(_newDefaultMasterSwapper != masterSwapper, 'Address must be different');\\n        address oldMasterSwapper = masterSwapper;\\n        masterSwapper = _newDefaultMasterSwapper;\\n\\n        emit MasterSwapperChanged(_newDefaultMasterSwapper, oldMasterSwapper);\\n    }\\n\\n    /**\\n     * GOVERNANCE FUNCTION: Edit an existing operation on the registry\\n     *\\n     * @param  _kind             Operation kind\\n     * @param  _operation        Address of the operation contract to set\\n     */\\n    function setOperation(uint8 _kind, address _operation) public override onlyOwner {\\n        require(_kind < MAX_OPERATIONS, 'Max operations reached');\\n        require(enabledOperations[_kind] != _operation, 'Operation already set');\\n        require(_operation != address(0), 'Operation address must exist.');\\n        enabledOperations[_kind] = _operation;\\n\\n        emit ControllerOperationSet(_kind, _operation);\\n    }\\n\\n    /**\\n     * GOVERNANCE FUNCTION: Edits the minimum liquidity an asset must have on Uniswap\\n     *\\n     * @param  _reserve                         Address of the reserve to edit\\n     * @param  _newMinLiquidityReserve          Absolute min liquidity of an asset to grab price\\n     */\\n    function editLiquidityReserve(address _reserve, uint256 _newMinLiquidityReserve) public override onlyOwner {\\n        require(_newMinLiquidityReserve > 0, '_minRiskyPairLiquidityEth > 0');\\n        require(validReserveAsset[_reserve], 'Needs to be a valid reserve');\\n        minLiquidityPerReserve[_reserve] = _newMinLiquidityReserve;\\n\\n        emit LiquidityMinimumEdited(_reserve, _newMinLiquidityReserve);\\n    }\\n\\n    // ===========  Protocol security related Gov Functions ======\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Set-up a pause guardian\\n     * @param _guardian               Address of the guardian\\n     */\\n    function setPauseGuardian(address _guardian) external override {\\n        require(\\n            msg.sender == guardian || msg.sender == owner(),\\n            'only pause guardian and owner can update pause guardian'\\n        );\\n        require(msg.sender == owner() || _guardian != address(0), 'Guardian cannot remove himself');\\n        // Save current value for inclusion in log\\n        address oldPauseGuardian = guardian;\\n        // Store pauseGuardian with value newPauseGuardian\\n        guardian = _guardian;\\n        // Emit NewPauseGuardian(OldPauseGuardian, NewPauseGuardian)\\n        emit NewPauseGuardian(oldPauseGuardian, _guardian);\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Pause the protocol globally in case of unexpected issue\\n     * Only the governance can unpause it\\n     * @param _state               True to pause, false to unpause.\\n     */\\n    function setGlobalPause(bool _state) external override returns (bool) {\\n        require(msg.sender == guardian || msg.sender == owner(), 'only pause guardian and owner can pause globally');\\n        require(msg.sender == owner() || _state == true, 'only admin can unpause');\\n\\n        guardianGlobalPaused = _state;\\n        emit ActionPaused('Guardian global pause', _state);\\n        return _state;\\n    }\\n\\n    /**\\n     * PRIVILEGED GOVERNANCE FUNCTION. Pause some smartcontracts in a batch process in case of unexpected issue\\n     * Only the governance can unpause it\\n     * @param _address             Addresses of protocol smartcontract to be paused\\n     * @param _state               Boolean pause state\\n     */\\n    function setSomePause(address[] memory _address, bool _state) external override returns (bool) {\\n        require(\\n            msg.sender == guardian || msg.sender == owner(),\\n            'only pause guardian and owner can pause individually'\\n        );\\n        require(msg.sender == owner() || _state == true, 'only admin can unpause');\\n        for (uint256 i = 0; i < _address.length; i++) {\\n            guardianPaused[_address[i]] = _state;\\n            emit ActionPausedIndividually('Guardian individual pause', _address[i], _state);\\n        }\\n        return _state;\\n    }\\n\\n    /* ============ External Getter Functions ============ */\\n\\n    function owner() public view override(IBabController, OwnableUpgradeable) returns (address) {\\n        return OwnableUpgradeable.owner();\\n    }\\n\\n    function getGardens() external view override returns (address[] memory) {\\n        return gardens;\\n    }\\n\\n    function getOperations() external view override returns (address[20] memory) {\\n        return enabledOperations;\\n    }\\n\\n    function getReserveAssets() external view returns (address[] memory) {\\n        return reserveAssets;\\n    }\\n\\n    function isValidReserveAsset(address _reserveAsset) external view override returns (bool) {\\n        return validReserveAsset[_reserveAsset];\\n    }\\n\\n    function isValidKeeper(address _keeper) external view override returns (bool) {\\n        return keeperList[_keeper];\\n    }\\n\\n    /**\\n     * Check whether or not there is a global pause or a specific pause of the provided contract address\\n     * @param _contract               Smartcontract address to check for a global or specific pause\\n     */\\n    function isPaused(address _contract) external view override returns (bool) {\\n        return guardianGlobalPaused || guardianPaused[_contract];\\n    }\\n\\n    /**\\n     * Check whether or not the strategies are beta protocol strategies deserving rewards\\n     * @param _strategies              Smartcontract address to check for a global or specific pause\\n     */\\n    function isBetaStrategy(address[] memory _strategies)\\n        external\\n        view\\n        override\\n        returns (bool[] memory, uint256[] memory)\\n    {\\n        uint256[] memory capitalAllocated = new uint256[](_strategies.length);\\n        bool[] memory isABetaStrategy = new bool[](_strategies.length);\\n        uint256 startTime = IRewardsDistributor(rewardsDistributor).START_TIME();\\n        for (uint256 i = 0; i < _strategies.length; i++) {\\n            require(_strategies[i] != address(0), 'not a valid address');\\n            address garden = address(IStrategy(_strategies[i]).garden());\\n            // Only protocol strategies security cross-check\\n            require(isGarden[garden] && IGarden(garden).isGardenStrategy(_strategies[i]), 'not a protocol strategy');\\n            // ts[0]: executedAt, ts[1]: updatedAt\\n            // isStrategyActive implies exitedAt == 0 (not finished yet)\\n            uint256[] memory ts = new uint256[](2);\\n            (, , , , ts[0], , ts[1]) = IStrategy(_strategies[i]).getStrategyState();\\n            isABetaStrategy[i] =\\n                ts[0] < startTime &&\\n                ts[1] < startTime &&\\n                IStrategy(_strategies[i]).isStrategyActive() &&\\n                startTime != 0;\\n            capitalAllocated[i] = IStrategy(_strategies[i]).capitalAllocated();\\n        }\\n        return (isABetaStrategy, capitalAllocated);\\n    }\\n\\n    function getLiveStrategies(uint256 _size) external view override returns (address[] memory) {\\n        uint256 pid;\\n        address[] memory liveStrategies = new address[](_size);\\n        // Get all protocol gardens at initialization of mining program\\n        for (uint256 i = 0; i < gardens.length; i++) {\\n            // get all strategies at each garden and check whether or not are active strategies\\n            address[] memory strategies = IGarden(gardens[i]).getStrategies();\\n            if (strategies.length == 0) {\\n                continue;\\n            }\\n            for (uint256 j = 0; j < strategies.length; j++) {\\n                if (IStrategy(strategies[j]).isStrategyActive()) {\\n                    // We pre-select eligible strategies to call rewards distributor\\n                    liveStrategies[pid] = address(strategies[j]);\\n                    pid++;\\n                }\\n                if (pid == _size) break;\\n            }\\n            if (pid == _size) break;\\n        }\\n        return liveStrategies;\\n    }\\n\\n    /**\\n     * Returns the percentages of a strategy Profit Sharing\\n     *\\n     * @return            Strategist, Stewards, Lps, creator bonus\\n     */\\n    function getProfitSharing()\\n        external\\n        view\\n        override\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        return (strategistProfitPercentage, stewardsProfitPercentage, lpsProfitPercentage);\\n    }\\n\\n    /**\\n     * Returns the percentages of BABL Profit Sharing\\n     *\\n     * @return            Strategist, Stewards, Lps, creator bonus\\n     */\\n    function getBABLSharing()\\n        external\\n        view\\n        override\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        return (strategistBABLPercentage, stewardsBABLPercentage, lpsBABLPercentage, gardenCreatorBonus);\\n    }\\n\\n    /**\\n     * Check if a contract address is a garden or one of the system contracts\\n     *\\n     * @param  _contractAddress           The contract address to check\\n     */\\n    function isSystemContract(address _contractAddress) external view override returns (bool) {\\n        return (isGarden[_contractAddress] ||\\n            gardenValuer == _contractAddress ||\\n            priceOracle == _contractAddress ||\\n            gardenFactory == _contractAddress ||\\n            masterSwapper == _contractAddress ||\\n            strategyFactory == _contractAddress ||\\n            rewardsDistributor == _contractAddress ||\\n            owner() == _contractAddress ||\\n            _contractAddress == address(this) ||\\n            _isOperation(_contractAddress) ||\\n            (isGarden[address(IStrategy(_contractAddress).garden())] &&\\n                IGarden(IStrategy(_contractAddress).garden()).strategyMapping(_contractAddress)) ||\\n            (isGarden[address(IStrategy(_contractAddress).garden())] &&\\n                IGarden(IStrategy(_contractAddress).garden()).isGardenStrategy(_contractAddress)));\\n    }\\n\\n    /* ============ Internal Only Function ============ */\\n\\n    /**\\n     * Hashes the string and returns a bytes32 value\\n     */\\n    function _nameHash(string memory _name) private pure returns (bytes32) {\\n        return keccak256(bytes(_name));\\n    }\\n\\n    function _isOperation(address _address) private view returns (bool) {\\n        for (uint8 i = 0; i < MAX_OPERATIONS; i++) {\\n            if (_address == enabledOperations[i]) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n}\\n\\ncontract BabControllerV7 is BabController {}\\n\",\"keccak256\":\"0x9a2ea1c89d51b49cbb396d15b29fa0483f2192b0dbd726e33ea23ce0bb67bcc2\",\"license\":\"Apache License\"},\"contracts/interfaces/IBabController.sol\":{\"content\":\"/*\\n    Copyright 2021 Babylon Finance.\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\npragma solidity 0.7.6;\\n\\n/**\\n * @title IBabController\\n * @author Babylon Finance\\n *\\n * Interface for interacting with BabController\\n */\\ninterface IBabController {\\n    /* ============ Functions ============ */\\n\\n    function createGarden(\\n        address _reserveAsset,\\n        string memory _name,\\n        string memory _symbol,\\n        string memory _tokenURI,\\n        uint256 _seed,\\n        uint256[] calldata _gardenParams,\\n        uint256 _initialContribution,\\n        bool[] memory _publicGardenStrategistsStewards,\\n        uint256[] memory _profitSharing\\n    ) external payable returns (address);\\n\\n    function removeGarden(address _garden) external;\\n\\n    function addReserveAsset(address _reserveAsset) external;\\n\\n    function removeReserveAsset(address _reserveAsset) external;\\n\\n    function editPriceOracle(address _priceOracle) external;\\n\\n    function editIshtarGate(address _ishtarGate) external;\\n\\n    function editMardukGate(address _mardukGate) external;\\n\\n    function editGardenValuer(address _gardenValuer) external;\\n\\n    function editRewardsDistributor(address _rewardsDistributor) external;\\n\\n    function editTreasury(address _newTreasury) external;\\n\\n    function editGardenFactory(address _newGardenFactory) external;\\n\\n    function editGardenNFT(address _newGardenNFT) external;\\n\\n    function editStrategyNFT(address _newStrategyNFT) external;\\n\\n    function editStrategyFactory(address _newStrategyFactory) external;\\n\\n    function setOperation(uint8 _kind, address _operation) external;\\n\\n    function setMasterSwapper(address _newMasterSwapper) external;\\n\\n    function addKeeper(address _keeper) external;\\n\\n    function addKeepers(address[] memory _keepers) external;\\n\\n    function removeKeeper(address _keeper) external;\\n\\n    function enableGardenTokensTransfers() external;\\n\\n    function enableBABLMiningProgram() external;\\n\\n    function setAllowPublicGardens() external;\\n\\n    function editLiquidityReserve(address _reserve, uint256 _minRiskyPairLiquidityEth) external;\\n\\n    function maxContributorsPerGarden() external view returns (uint256);\\n\\n    function gardenCreationIsOpen() external view returns (bool);\\n\\n    function openPublicGardenCreation() external;\\n\\n    function setMaxContributorsPerGarden(uint256 _newMax) external;\\n\\n    function owner() external view returns (address);\\n\\n    function guardianGlobalPaused() external view returns (bool);\\n\\n    function guardianPaused(address _address) external view returns (bool);\\n\\n    function setPauseGuardian(address _guardian) external;\\n\\n    function setGlobalPause(bool _state) external returns (bool);\\n\\n    function setSomePause(address[] memory _address, bool _state) external returns (bool);\\n\\n    function isPaused(address _contract) external view returns (bool);\\n\\n    function priceOracle() external view returns (address);\\n\\n    function gardenValuer() external view returns (address);\\n\\n    function gardenNFT() external view returns (address);\\n\\n    function strategyNFT() external view returns (address);\\n\\n    function rewardsDistributor() external view returns (address);\\n\\n    function gardenFactory() external view returns (address);\\n\\n    function treasury() external view returns (address);\\n\\n    function ishtarGate() external view returns (address);\\n\\n    function mardukGate() external view returns (address);\\n\\n    function strategyFactory() external view returns (address);\\n\\n    function masterSwapper() external view returns (address);\\n\\n    function gardenTokensTransfersEnabled() external view returns (bool);\\n\\n    function bablMiningProgramEnabled() external view returns (bool);\\n\\n    function allowPublicGardens() external view returns (bool);\\n\\n    function enabledOperations(uint256 _kind) external view returns (address);\\n\\n    function getProfitSharing()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    function getBABLSharing()\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    function getGardens() external view returns (address[] memory);\\n\\n    function getOperations() external view returns (address[20] memory);\\n\\n    function getLiveStrategies(uint256 _size) external view returns (address[] memory);\\n\\n    function isGarden(address _garden) external view returns (bool);\\n\\n    function isValidReserveAsset(address _reserveAsset) external view returns (bool);\\n\\n    function isValidKeeper(address _keeper) external view returns (bool);\\n\\n    function isSystemContract(address _contractAddress) external view returns (bool);\\n\\n    function isBetaStrategy(address[] memory _strategies) external view returns (bool[] memory, uint256[] memory);\\n\\n    function protocolPerformanceFee() external view returns (uint256);\\n\\n    function protocolManagementFee() external view returns (uint256);\\n\\n    function minLiquidityPerReserve(address _reserve) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7692bd2ab8cbc24d41c812f7e5e61666ced4e1560c60d09f299fb4c5cd1db70d\",\"license\":\"Apache License\"},\"contracts/interfaces/IBabylonGate.sol\":{\"content\":\"/*\\n    Copyright 2021 Babylon Finance\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributedx under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\npragma solidity 0.7.6;\\n\\n/**\\n * @title IBabylonGate\\n * @author Babylon Finance\\n *\\n * Interface for interacting with the Guestlists\\n */\\ninterface IBabylonGate {\\n    /* ============ Functions ============ */\\n\\n    function setGardenAccess(\\n        address _user,\\n        address _garden,\\n        uint8 _permission\\n    ) external returns (uint256);\\n\\n    function setCreatorPermissions(address _user, bool _canCreate) external returns (uint256);\\n\\n    function grantGardenAccessBatch(\\n        address _garden,\\n        address[] calldata _users,\\n        uint8[] calldata _perms\\n    ) external returns (bool);\\n\\n    function maxNumberOfInvites() external view returns (uint256);\\n\\n    function setMaxNumberOfInvites(uint256 _maxNumberOfInvites) external;\\n\\n    function grantCreatorsInBatch(address[] calldata _users, bool[] calldata _perms) external returns (bool);\\n\\n    function canCreate(address _user) external view returns (bool);\\n\\n    function canJoinAGarden(address _garden, address _user) external view returns (bool);\\n\\n    function canVoteInAGarden(address _garden, address _user) external view returns (bool);\\n\\n    function canAddStrategiesInAGarden(address _garden, address _user) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xaa576606ca901fdba7fe35d294825f6b3cc23e8e9992e735116d75d352fbb35b\",\"license\":\"Apache License\"},\"contracts/interfaces/IGarden.sol\":{\"content\":\"/*\\n    Copyright 2021 Babylon Finance\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\npragma solidity 0.7.6;\\n\\n/**\\n * @title IGarden\\n * @author Babylon Finance\\n *\\n * Interface for operating with a Garden.\\n */\\ninterface IGarden {\\n    /* ============ Functions ============ */\\n    function initialize(\\n        address _reserveAsset,\\n        address _controller,\\n        address _creator,\\n        string memory _name,\\n        string memory _symbol,\\n        uint256[] calldata _gardenParams,\\n        uint256 _initialContribution,\\n        bool[] memory _publicGardenStrategistsStewards\\n    ) external payable;\\n\\n    function makeGardenPublic() external;\\n\\n    function transferCreatorRights(address _newCreator, uint8 _index) external;\\n\\n    function addExtraCreators(address[4] memory _newCreators) external;\\n\\n    function setPublicRights(bool _publicStrategist, bool _publicStewards) external;\\n\\n    function privateGarden() external view returns (bool);\\n\\n    function publicStrategists() external view returns (bool);\\n\\n    function publicStewards() external view returns (bool);\\n\\n    function controller() external view returns (address);\\n\\n    function creator() external view returns (address);\\n\\n    function isGardenStrategy(address _strategy) external view returns (bool);\\n\\n    function getContributor(address _contributor)\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    function reserveAsset() external view returns (address);\\n\\n    function totalContributors() external view returns (uint256);\\n\\n    function gardenInitializedAt() external view returns (uint256);\\n\\n    function minContribution() external view returns (uint256);\\n\\n    function maxContributors() external view returns (uint256);\\n\\n    function depositHardlock() external view returns (uint256);\\n\\n    function minLiquidityAsset() external view returns (uint256);\\n\\n    function minStrategyDuration() external view returns (uint256);\\n\\n    function maxStrategyDuration() external view returns (uint256);\\n\\n    function reserveAssetRewardsSetAside() external view returns (uint256);\\n\\n    function absoluteReturns() external view returns (int256);\\n\\n    function totalStake() external view returns (uint256);\\n\\n    function minVotesQuorum() external view returns (uint256);\\n\\n    function minVoters() external view returns (uint256);\\n\\n    function maxDepositLimit() external view returns (uint256);\\n\\n    function strategyCooldownPeriod() external view returns (uint256);\\n\\n    function getStrategies() external view returns (address[] memory);\\n\\n    function extraCreators(uint256 index) external view returns (address);\\n\\n    function getFinalizedStrategies() external view returns (address[] memory);\\n\\n    function strategyMapping(address _strategy) external view returns (bool);\\n\\n    function finalizeStrategy(\\n        uint256 _profits,\\n        int256 _returns,\\n        uint256 _burningAmount\\n    ) external;\\n\\n    function allocateCapitalToStrategy(uint256 _capital) external;\\n\\n    function addStrategy(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256[] calldata _stratParams,\\n        uint8[] calldata _opTypes,\\n        address[] calldata _opIntegrations,\\n        bytes calldata _opEncodedDatas\\n    ) external;\\n\\n    function deposit(\\n        uint256 _reserveAssetQuantity,\\n        uint256 _minGardenTokenReceiveQuantity,\\n        address _to,\\n        bool mintNFT\\n    ) external payable;\\n\\n    function depositBySig(\\n        uint256 _amountIn,\\n        uint256 _minAmountOut,\\n        bool _mintNft,\\n        uint256 _nonce,\\n        uint256 _maxFee,\\n        uint256 _pricePerShare,\\n        uint256 _fee,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function withdraw(\\n        uint256 _gardenTokenQuantity,\\n        uint256 _minReserveReceiveQuantity,\\n        address payable _to,\\n        bool _withPenalty,\\n        address _unwindStrategy\\n    ) external;\\n\\n    function withdrawBySig(\\n        uint256 _gardenTokenQuantity,\\n        uint256 _minReserveReceiveQuantity,\\n        uint256 _nonce,\\n        uint256 _maxFee,\\n        uint256 _pricePerShare,\\n        uint256 _fee,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function claimReturns(address[] calldata _finalizedStrategies) external;\\n\\n    function getLockedBalance(address _contributor) external view returns (uint256);\\n\\n    function expireCandidateStrategy(address _strategy) external;\\n\\n    function payKeeper(address payable _keeper, uint256 _fee) external;\\n\\n    function keeperDebt() external view returns (uint256);\\n\\n    function totalKeeperFees() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x2b6caf65d253e9c8b5f22c4862dace55a9a391e5af04c97d339e1d80016db144\",\"license\":\"Apache License\"},\"contracts/interfaces/IGardenFactory.sol\":{\"content\":\"/*\\n    Copyright 2021 Babylon Finance\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\npragma solidity 0.7.6;\\n\\nimport {IIntegration} from './IIntegration.sol';\\n\\n/**\\n * @title IGardenFactory\\n * @author Babylon Finance\\n *\\n * Interface for the garden factory\\n */\\ninterface IGardenFactory {\\n    function createGarden(\\n        address _reserveAsset,\\n        address _creator,\\n        string memory _name,\\n        string memory _symbol,\\n        string memory _tokenURI,\\n        uint256 _seed,\\n        uint256[] calldata _gardenParams,\\n        uint256 _initialContribution,\\n        bool[] memory _publicGardenStrategistsStewards\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0x18fe8cf5b5606fc137c57aa5338a3e15f62f764f785cbfb9a626d083c27d1f9e\",\"license\":\"Apache License\"},\"contracts/interfaces/IIntegration.sol\":{\"content\":\"/*\\n    Copyright 2021 Babylon Finance\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\npragma solidity 0.7.6;\\n\\n/**\\n * @title IIntegration\\n * @author Babylon Finance\\n *\\n * Interface for protocol integrations\\n */\\ninterface IIntegration {\\n    function getName() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xee03c9274ddf3257e3bfd2bb229fea3412c9105f178e64174f59efeafd53182c\",\"license\":\"Apache License\"},\"contracts/interfaces/IIshtarGate.sol\":{\"content\":\"/*\\n    Copyright 2021 Babylon Finance\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\npragma solidity 0.7.6;\\n\\nimport {IBabylonGate} from './IBabylonGate.sol';\\n\\n/**\\n * @title IIshtarGate\\n * @author Babylon Finance\\n *\\n * Interface for interacting with the Gate Guestlist NFT\\n */\\ninterface IIshtarGate is IBabylonGate {\\n    /* ============ Functions ============ */\\n\\n    function tokenURI() external view returns (string memory);\\n\\n    function updateGardenURI(string memory _tokenURI) external;\\n}\\n\",\"keccak256\":\"0x0b356739f4fbed6eca4c8cbe608b0d6cc5d2e458ce4d5e23a4fa9a4dc8603560\",\"license\":\"Apache License\"},\"contracts/interfaces/IRewardsDistributor.sol\":{\"content\":\"/*\\n    Copyright 2021 Babylon Finance.\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\n\\npragma solidity 0.7.6;\\n\\n/**\\n * @title IRewardsDistributor\\n * @author Babylon Finance\\n *\\n * Interface for the distribute rewards of the BABL Mining Program.\\n */\\n\\ninterface IRewardsDistributor {\\n    /* ========== View functions ========== */\\n\\n    // solhint-disable-next-line\\n    function START_TIME() external view returns (uint256);\\n\\n    function getStrategyRewards(address _strategy) external view returns (uint96);\\n\\n    function getRewards(\\n        address _garden,\\n        address _contributor,\\n        address[] calldata _finalizedStrategies\\n    ) external view returns (uint256[] memory);\\n\\n    function getContributorPower(\\n        address _garden,\\n        address _contributor,\\n        uint256 _time\\n    ) external view returns (uint256);\\n\\n    function getGardenProfitsSharing(address _garden) external view returns (uint256[3] memory);\\n\\n    function checkMining(uint256 _quarterNum, address _strategy)\\n        external\\n        view\\n        returns (uint256[] memory, bool[] memory);\\n\\n    function getBetaMigration(address _garden, address _contributor)\\n        external\\n        view\\n        returns (uint256[] memory, bool[] memory);\\n\\n    /* ============ External Functions ============ */\\n\\n    function startBABLRewards() external;\\n\\n    function addLiveStrategies(address[] memory _strategies) external;\\n\\n    function sendTokensToContributor(address _to, uint256 _amount) external;\\n\\n    function setProfitRewards(\\n        address _garden,\\n        uint256 _strategistShare,\\n        uint256 _stewardsShare,\\n        uint256 _lpShare\\n    ) external;\\n\\n    function updateProtocolPrincipal(uint256 _capital, bool _addOrSubstract) external;\\n\\n    function updateGardenPowerAndContributor(\\n        address _garden,\\n        address _contributor,\\n        uint256 _previousBalance,\\n        uint256 _previousSupply,\\n        uint256 _tokenDiff,\\n        bool _addOrSubstract\\n    ) external;\\n\\n    function migrateBetaUsers(address _garden, address[] memory _contributors) external;\\n}\\n\",\"keccak256\":\"0x005e1f51401244fcbe1d31000995898a56bf8c4ba9efc0e2e581c00671505775\",\"license\":\"Apache License\"},\"contracts/interfaces/IStrategy.sol\":{\"content\":\"/*\\n    Copyright 2021 Babylon Finance\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\npragma solidity 0.7.6;\\n\\nimport {IGarden} from '../interfaces/IGarden.sol';\\n\\n/**\\n * @title IStrategy\\n * @author Babylon Finance\\n *\\n * Interface for strategy\\n */\\ninterface IStrategy {\\n    function initialize(\\n        address _strategist,\\n        address _garden,\\n        address _controller,\\n        uint256 _maxCapitalRequested,\\n        uint256 _stake,\\n        uint256 _strategyDuration,\\n        uint256 _expectedReturn,\\n        uint256 _maxAllocationPercentage\\n    ) external;\\n\\n    function resolveVoting(\\n        address[] calldata _voters,\\n        int256[] calldata _votes,\\n        uint256 fee\\n    ) external;\\n\\n    function setData(\\n        uint8[] calldata _opTypes,\\n        address[] calldata _opIntegrations,\\n        bytes memory _opEncodedData\\n    ) external;\\n\\n    function executeStrategy(uint256 _capital, uint256 fee) external;\\n\\n    function getNAV() external view returns (uint256);\\n\\n    function opEncodedData() external view returns (bytes memory);\\n\\n    function getOperationsCount() external view returns (uint256);\\n\\n    function getOperationByIndex(uint8 _index)\\n        external\\n        view\\n        returns (\\n            uint8,\\n            address,\\n            bytes memory\\n        );\\n\\n    function finalizeStrategy(uint256 fee, string memory _tokenURI) external;\\n\\n    function unwindStrategy(uint256 _amountToUnwind) external;\\n\\n    function changeStrategyDuration(uint256 _newDuration) external;\\n\\n    function invokeFromIntegration(\\n        address _target,\\n        uint256 _value,\\n        bytes calldata _data\\n    ) external returns (bytes memory);\\n\\n    function invokeApprove(\\n        address _spender,\\n        address _asset,\\n        uint256 _quantity\\n    ) external;\\n\\n    function trade(\\n        address _sendToken,\\n        uint256 _sendQuantity,\\n        address _receiveToken\\n    ) external returns (uint256);\\n\\n    function handleWeth(bool _isDeposit, uint256 _wethAmount) external;\\n\\n    function getStrategyDetails()\\n        external\\n        view\\n        returns (\\n            address,\\n            address,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            address,\\n            uint256,\\n            uint256\\n        );\\n\\n    function getStrategyState()\\n        external\\n        view\\n        returns (\\n            address,\\n            bool,\\n            bool,\\n            bool,\\n            uint256,\\n            uint256,\\n            uint256\\n        );\\n\\n    function getStrategyRewardsContext()\\n        external\\n        view\\n        returns (\\n            address,\\n            uint256[] memory,\\n            bool[] memory\\n        );\\n\\n    function isStrategyActive() external view returns (bool);\\n\\n    function getUserVotes(address _address) external view returns (int256);\\n\\n    function strategist() external view returns (address);\\n\\n    function enteredAt() external view returns (uint256);\\n\\n    function enteredCooldownAt() external view returns (uint256);\\n\\n    function stake() external view returns (uint256);\\n\\n    function strategyRewards() external view returns (uint256);\\n\\n    function maxCapitalRequested() external view returns (uint256);\\n\\n    function maxAllocationPercentage() external view returns (uint256);\\n\\n    function expectedReturn() external view returns (uint256);\\n\\n    function duration() external view returns (uint256);\\n\\n    function totalPositiveVotes() external view returns (uint256);\\n\\n    function totalNegativeVotes() external view returns (uint256);\\n\\n    function capitalReturned() external view returns (uint256);\\n\\n    function capitalAllocated() external view returns (uint256);\\n\\n    function garden() external view returns (IGarden);\\n}\\n\",\"keccak256\":\"0x11bb26ef31581dbd735194333b4533a2b0caa5af9a3e381a4d5693d3ccd7e530\",\"license\":\"Apache License\"},\"contracts/lib/AddressArrayUtils.sol\":{\"content\":\"/*\\n    Copyright 2020 Set Labs Inc.\\n\\n    Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    you may not use this file except in compliance with the License.\\n    You may obtain a copy of the License at\\n\\n    http://www.apache.org/licenses/LICENSE-2.0\\n\\n    Unless required by applicable law or agreed to in writing, software\\n    distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    See the License for the specific language governing permissions and\\n    limitations under the License.\\n\\n    SPDX-License-Identifier: Apache License, Version 2.0\\n*/\\n\\npragma solidity 0.7.6;\\n\\n/**\\n * @title AddressArrayUtils\\n * @author Set Protocol\\n *\\n * Utility functions to handle Address Arrays\\n */\\nlibrary AddressArrayUtils {\\n    /**\\n     * Finds the index of the first occurrence of the given element.\\n     * @param A The input array to search\\n     * @param a The value to find\\n     * @return Returns (index and isIn) for the first occurrence starting from index 0\\n     */\\n    function indexOf(address[] memory A, address a) internal pure returns (uint256, bool) {\\n        uint256 length = A.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            if (A[i] == a) {\\n                return (i, true);\\n            }\\n        }\\n        return (uint256(-1), false);\\n    }\\n\\n    /**\\n     * Returns true if the value is present in the list. Uses indexOf internally.\\n     * @param A The input array to search\\n     * @param a The value to find\\n     * @return Returns isIn for the first occurrence starting from index 0\\n     */\\n    function contains(address[] memory A, address a) internal pure returns (bool) {\\n        (, bool isIn) = indexOf(A, a);\\n        return isIn;\\n    }\\n\\n    /**\\n     * Returns true if there are 2 elements that are the same in an array\\n     * @param A The input array to search\\n     * @return Returns boolean for the first occurrence of a duplicate\\n     */\\n    function hasDuplicate(address[] memory A) internal pure returns (bool) {\\n        require(A.length > 0, 'A is empty');\\n\\n        for (uint256 i = 0; i < A.length - 1; i++) {\\n            address current = A[i];\\n            for (uint256 j = i + 1; j < A.length; j++) {\\n                if (current == A[j]) {\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * @param A The input array to search\\n     * @param a The address to remove\\n     * @return Returns the array with the object removed.\\n     */\\n    function remove(address[] memory A, address a) internal pure returns (address[] memory) {\\n        (uint256 index, bool isIn) = indexOf(A, a);\\n        if (!isIn) {\\n            revert('Address not in array.');\\n        } else {\\n            (address[] memory _A, ) = pop(A, index);\\n            return _A;\\n        }\\n    }\\n\\n    /**\\n     * Removes specified index from array\\n     * @param A The input array to search\\n     * @param index The index to remove\\n     * @return Returns the new array and the removed entry\\n     */\\n    function pop(address[] memory A, uint256 index) internal pure returns (address[] memory, address) {\\n        uint256 length = A.length;\\n        require(index < A.length, 'Index must be < A length');\\n        address[] memory newAddresses = new address[](length - 1);\\n        for (uint256 i = 0; i < index; i++) {\\n            newAddresses[i] = A[i];\\n        }\\n        for (uint256 j = index + 1; j < length; j++) {\\n            newAddresses[j - 1] = A[j];\\n        }\\n        return (newAddresses, A[index]);\\n    }\\n\\n    /**\\n     * Returns the combination of the two arrays\\n     * @param A The first array\\n     * @param B The second array\\n     * @return Returns A extended by B\\n     */\\n    function extend(address[] memory A, address[] memory B) internal pure returns (address[] memory) {\\n        uint256 aLength = A.length;\\n        uint256 bLength = B.length;\\n        address[] memory newAddresses = new address[](aLength + bLength);\\n        for (uint256 i = 0; i < aLength; i++) {\\n            newAddresses[i] = A[i];\\n        }\\n        for (uint256 j = 0; j < bLength; j++) {\\n            newAddresses[aLength + j] = B[j];\\n        }\\n        return newAddresses;\\n    }\\n}\\n\",\"keccak256\":\"0x409127cd8cadb573e5de48fd992efbd8b0f1e243d235abc3c5f2fa873195c16a\",\"license\":\"Apache License\"},\"contracts/lib/LowGasSafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\n\\npragma solidity 0.7.6;\\n\\n/// @title Optimized overflow and underflow safe math operations\\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\\nlibrary LowGasSafeMath {\\n    /// @notice Returns x + y, reverts if sum overflows uint256\\n    /// @param x The augend\\n    /// @param y The addend\\n    /// @return z The sum of x and y\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x);\\n    }\\n\\n    /// @notice Returns x - y, reverts if underflows\\n    /// @param x The minuend\\n    /// @param y The subtrahend\\n    /// @return z The difference of x and y\\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x);\\n    }\\n\\n    /// @notice Returns x * y, reverts if overflows\\n    /// @param x The multiplicand\\n    /// @param y The multiplier\\n    /// @return z The product of x and y\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require(x == 0 || (z = x * y) / x == y);\\n    }\\n\\n    /// @notice Returns x + y, reverts if overflows or underflows\\n    /// @param x The augend\\n    /// @param y The addend\\n    /// @return z The sum of x and y\\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\\n        require((z = x + y) >= x == (y >= 0));\\n    }\\n\\n    /// @notice Returns x - y, reverts if overflows or underflows\\n    /// @param x The minuend\\n    /// @param y The subtrahend\\n    /// @return z The difference of x and y\\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\\n        require((z = x - y) <= x == (y >= 0));\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, 'SafeMath: division by zero');\\n        return a / b;\\n    }\\n}\\n\",\"keccak256\":\"0xdb9b5f36675fd53dd12aa2b33f70305aa576bba377cb8d3ce680df6ee3f63635\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50615e1f80620000216000396000f3fe60806040526004361061057e5760003560e01c806369685513116102d5578063bc09228311610184578063daec2a1a116100e1578063f04ec54711610095578063f2fde38b1161006f578063f2fde38b14611630578063f948e50a14611663578063f979cdd9146116b15761057e565b8063f04ec5471461158f578063f05017eb146115c2578063f142c3bc146115f55761057e565b8063e6e60513116100c6578063e6e6051314611532578063e973f4e914611547578063ead4c1cf1461157a5761057e565b8063daec2a1a146114ea578063dfaef58f146114ff5761057e565b8063c9f7f2ed11610138578063d196f61f1161011d578063d196f61f14611484578063d276cbdc14611499578063d6a45aa5146114d55761057e565b8063c9f7f2ed1461145a578063cfd180191461146f5761057e565b8063c2d38e7911610169578063c2d38e79146113fd578063c80aad6314611430578063c8ed947f146114455761057e565b8063bc092283146113b5578063bc819ea6146113e85761057e565b806388e8dc75116102325780639ef35710116101e6578063ad9d791d116101cb578063ad9d791d1461131c578063b0ecdf801461134f578063b82efd4f146113825761057e565b80639ef35710146112f2578063ad5c4648146113075761057e565b80638d78fb79116102175780638d78fb791461129e5780638da5cb5b146112b35780639e18eb39146112c85761057e565b806388e8dc751461123257806389790429146112655761057e565b80637f80e05b1161028957806385d5d0361161026e57806385d5d036146111b7578063867b6efa146111ea57806386f2bc811461121d5761057e565b80637f80e05b1461118d5780638129fc1c146111a25761057e565b8063715018a6116102ba578063715018a61461114e5780637177fec9146111635780637c4f0a36146111785761057e565b806369685513146110ef57806369a6b3db146111225761057e565b806337973e5f116104315780634a44ff441161038e5780635b14f183116103425780635e192de6116103275780635e192de61461109257806361d027b3146110c557806362a4bf05146110da5761057e565b80635b14f183146110345780635dc2803a146110675761057e565b806356161472116103735780635616147214610cc15780635618b5b214610fec578063568c08131461101f5761057e565b80634a44ff4414610c9757806352aeec7714610cac5761057e565b8063411137c3116103e5578063447a1366116103ca578063447a136614610c1c578063452a932014610c4f57806348bde20c14610c645761057e565b8063411137c314610aa05780634365a8a814610ad35761057e565b80633f2a5540116104165780633f2a554014610a2e5780634032b72b14610a43578063404c363914610a765761057e565b806337973e5f146109ef578063393bfe4914610a195761057e565b806327e4acc7116104df5780633137547711610493578063364d118111610478578063364d11811461092d57806336c148b714610960578063374c64e2146109755761057e565b80633137547714610868578063314a83c91461087d5761057e565b80632b9db0bf116104c45780632b9db0bf146107f95780632e0519cf1461082057806330944c62146108535761057e565b806327e4acc7146107cf578063294d237c146107e45761057e565b806317a2571411610536578063201041981161051b578063201041981461075d57806322c7fa8f146107875780632630c12f146107ba5761057e565b806317a257141461071557806318b9e2521461072a5761057e565b806313bc6d4b1161056757806313bc6d4b1461067a57806314ae9f2e146106ad57806316d9c070146106e25761057e565b80630306f6d2146105835780630ebdb9a214610649575b600080fd5b34801561058f57600080fd5b50610635600480360360408110156105a657600080fd5b8101906020810181356401000000008111156105c157600080fd5b8201836020820111156105d357600080fd5b803590602001918460208302840111640100000000831117156105f557600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050505035151590506116e4565b604080519115158252519081900360200190f35b34801561065557600080fd5b5061065e6118d7565b604080516001600160a01b039092168252519081900360200190f35b34801561068657600080fd5b506106356004803603602081101561069d57600080fd5b50356001600160a01b03166118eb565b3480156106b957600080fd5b506106e0600480360360208110156106d057600080fd5b50356001600160a01b0316611cf4565b005b3480156106ee57600080fd5b506106e06004803603602081101561070557600080fd5b50356001600160a01b0316611de4565b34801561072157600080fd5b506106e0611f7e565b34801561073657600080fd5b506106e06004803603602081101561074d57600080fd5b50356001600160a01b0316611ff3565b34801561076957600080fd5b5061065e6004803603602081101561078057600080fd5b50356122e4565b34801561079357600080fd5b506106e0600480360360208110156107aa57600080fd5b50356001600160a01b0316612304565b3480156107c657600080fd5b5061065e612484565b3480156107db57600080fd5b50610635612493565b3480156107f057600080fd5b5061065e61249c565b34801561080557600080fd5b5061080e6124ab565b60408051918252519081900360200190f35b34801561082c57600080fd5b506108356124b1565b60408051938452602084019290925282820152519081900360600190f35b34801561085f57600080fd5b506106356124bf565b34801561087457600080fd5b5061080e6124cd565b34801561088957600080fd5b506106e0600480360360208110156108a057600080fd5b8101906020810181356401000000008111156108bb57600080fd5b8201836020820111156108cd57600080fd5b803590602001918460208302840111640100000000831117156108ef57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506124d3945050505050565b34801561093957600080fd5b506106356004803603602081101561095057600080fd5b50356001600160a01b0316612591565b34801561096c57600080fd5b506106e06125a6565b34801561098157600080fd5b5061099f6004803603602081101561099857600080fd5b503561266f565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156109db5781810151838201526020016109c3565b505050509050019250505060405180910390f35b3480156109fb57600080fd5b5061065e60048036036020811015610a1257600080fd5b503561290d565b348015610a2557600080fd5b50610635612937565b348015610a3a57600080fd5b5061065e612940565b348015610a4f57600080fd5b506106e060048036036020811015610a6657600080fd5b50356001600160a01b031661294f565b348015610a8257600080fd5b506106e060048036036020811015610a9957600080fd5b50356129d5565b348015610aac57600080fd5b5061063560048036036020811015610ac357600080fd5b50356001600160a01b0316612a7c565b348015610adf57600080fd5b50610b8360048036036020811015610af657600080fd5b810190602081018135640100000000811115610b1157600080fd5b820183602082011115610b2357600080fd5b80359060200191846020830284011164010000000083111715610b4557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612a9a945050505050565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610bc7578181015183820152602001610baf565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610c06578181015183820152602001610bee565b5050505090500194505050505060405180910390f35b348015610c2857600080fd5b5061063560048036036020811015610c3f57600080fd5b50356001600160a01b031661300a565b348015610c5b57600080fd5b5061065e61301f565b348015610c7057600080fd5b506106e060048036036020811015610c8757600080fd5b50356001600160a01b0316613033565b348015610ca357600080fd5b5061080e61319e565b348015610cb857600080fd5b506106e06131a4565b61065e6004803603610120811015610cd857600080fd5b6001600160a01b038235169190810190604081016020820135640100000000811115610d0357600080fd5b820183602082011115610d1557600080fd5b80359060200191846001830284011164010000000083111715610d3757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050640100000000811115610d8a57600080fd5b820183602082011115610d9c57600080fd5b80359060200191846001830284011164010000000083111715610dbe57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050640100000000811115610e1157600080fd5b820183602082011115610e2357600080fd5b80359060200191846001830284011164010000000083111715610e4557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435959094909350604081019250602001359050640100000000811115610ea057600080fd5b820183602082011115610eb257600080fd5b80359060200191846020830284011164010000000083111715610ed457600080fd5b91939092823592604081019060200135640100000000811115610ef657600080fd5b820183602082011115610f0857600080fd5b80359060200191846020830284011164010000000083111715610f2a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610f7a57600080fd5b820183602082011115610f8c57600080fd5b80359060200191846020830284011164010000000083111715610fae57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061329e945050505050565b348015610ff857600080fd5b506106e06004803603602081101561100f57600080fd5b50356001600160a01b0316613952565b34801561102b57600080fd5b5061080e613ac7565b34801561104057600080fd5b506106356004803603602081101561105757600080fd5b50356001600160a01b0316613acd565b34801561107357600080fd5b5061107c613afb565b6040805160ff9092168252519081900360200190f35b34801561109e57600080fd5b50610635600480360360208110156110b557600080fd5b50356001600160a01b0316613b00565b3480156110d157600080fd5b5061065e613b15565b3480156110e657600080fd5b50610635613b24565b3480156110fb57600080fd5b506106e06004803603602081101561111257600080fd5b50356001600160a01b0316613b2d565b34801561112e57600080fd5b506106356004803603602081101561114557600080fd5b50351515613c3f565b34801561115a57600080fd5b506106e0613da9565b34801561116f57600080fd5b5061080e613e55565b34801561118457600080fd5b5061080e613e5b565b34801561119957600080fd5b50610635613e61565b3480156111ae57600080fd5b506106e0613e70565b3480156111c357600080fd5b506106e0600480360360208110156111da57600080fd5b50356001600160a01b0316613ef6565b3480156111f657600080fd5b506106e06004803603602081101561120d57600080fd5b50356001600160a01b0316614008565b34801561122957600080fd5b5061080e61411d565b34801561123e57600080fd5b506106e06004803603602081101561125557600080fd5b50356001600160a01b0316614123565b34801561127157600080fd5b506106e06004803603604081101561128857600080fd5b506001600160a01b0381351690602001356142bb565b3480156112aa57600080fd5b5061080e614433565b3480156112bf57600080fd5b5061065e614439565b3480156112d457600080fd5b5061065e600480360360208110156112eb57600080fd5b5035614448565b3480156112fe57600080fd5b5061065e614458565b34801561131357600080fd5b5061065e614467565b34801561132857600080fd5b506106356004803603602081101561133f57600080fd5b50356001600160a01b031661447f565b34801561135b57600080fd5b506106356004803603602081101561137257600080fd5b50356001600160a01b0316614494565b34801561138e57600080fd5b506106e0600480360360208110156113a557600080fd5b50356001600160a01b03166144a9565b3480156113c157600080fd5b506106e0600480360360208110156113d857600080fd5b50356001600160a01b03166145ba565b3480156113f457600080fd5b5061099f614737565b34801561140957600080fd5b506106e06004803603602081101561142057600080fd5b50356001600160a01b0316614799565b34801561143c57600080fd5b5061065e614916565b34801561145157600080fd5b5061065e614925565b34801561146657600080fd5b5061080e614934565b34801561147b57600080fd5b5061080e61493a565b34801561149057600080fd5b506106e0614940565b3480156114a557600080fd5b506106e0600480360360408110156114bc57600080fd5b50803560ff1690602001356001600160a01b03166149f3565b3480156114e157600080fd5b5061065e614bec565b3480156114f657600080fd5b5061099f614bfb565b34801561150b57600080fd5b506106e06004803603602081101561152257600080fd5b50356001600160a01b0316614c5b565b34801561153e57600080fd5b5061065e614d6d565b34801561155357600080fd5b506106e06004803603602081101561156a57600080fd5b50356001600160a01b0316614d7c565b34801561158657600080fd5b5061065e614e8e565b34801561159b57600080fd5b506106e0600480360360208110156115b257600080fd5b50356001600160a01b0316614e9d565b3480156115ce57600080fd5b5061080e600480360360208110156115e557600080fd5b50356001600160a01b0316614ff9565b34801561160157600080fd5b5061160a61500b565b604080519485526020850193909352838301919091526060830152519081900360800190f35b34801561163c57600080fd5b506106e06004803603602081101561165357600080fd5b50356001600160a01b031661501d565b34801561166f57600080fd5b50611678615120565b604051808261028080838360005b8381101561169e578181015183820152602001611686565b5050505090500191505060405180910390f35b3480156116bd57600080fd5b50610635600480360360208110156116d457600080fd5b50356001600160a01b0316615160565b60995460009061010090046001600160a01b031633148061171d5750611708614439565b6001600160a01b0316336001600160a01b0316145b6117585760405162461bcd60e51b8152600401808060200182810382526034815260200180615c7d6034913960400191505060405180910390fd5b611760614439565b6001600160a01b0316336001600160a01b0316148061178157506001821515145b6117d2576040805162461bcd60e51b815260206004820152601660248201527f6f6e6c792061646d696e2063616e20756e706175736500000000000000000000604482015290519081900360640190fd5b60005b83518110156118cc5782609a60008684815181106117ef57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507f14fc4a89e124f9817afd6bc9b8270d50250d5ff6f0711b687f6fa4c34decf1cd84828151811061185b57fe5b6020026020010151846040518080602001846001600160a01b031681526020018315158152602001828103825260198152602001807f477561726469616e20696e646976696475616c20706175736500000000000000815250602001935050505060405180910390a16001016117d5565b508190505b92915050565b609b5461010090046001600160a01b031681565b6001600160a01b03811660009081526086602052604081205460ff168061191f57506068546001600160a01b038381169116145b8061193757506069546001600160a01b038381169116145b8061194f5750606a546001600160a01b038381169116145b8061196757506071546001600160a01b038381169116145b8061197f5750606d546001600160a01b038381169116145b806119975750606b546001600160a01b038381169116145b806119ba5750816001600160a01b03166119af614439565b6001600160a01b0316145b806119cd57506001600160a01b03821630145b806119dc57506119dc8261517e565b80611b64575060866000836001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015611a1f57600080fd5b505afa158015611a33573d6000803e3d6000fd5b505050506040513d6020811015611a4957600080fd5b50516001600160a01b0316815260208101919091526040016000205460ff168015611b645750816001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015611aa857600080fd5b505afa158015611abc573d6000803e3d6000fd5b505050506040513d6020811015611ad257600080fd5b5051604080517f3a8219250000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015291519190921691633a821925916024808301926020929190829003018186803b158015611b3757600080fd5b505afa158015611b4b573d6000803e3d6000fd5b505050506040513d6020811015611b6157600080fd5b50515b80611cec575060866000836001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015611ba757600080fd5b505afa158015611bbb573d6000803e3d6000fd5b505050506040513d6020811015611bd157600080fd5b50516001600160a01b0316815260208101919091526040016000205460ff168015611cec5750816001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015611c3057600080fd5b505afa158015611c44573d6000803e3d6000fd5b505050506040513d6020811015611c5a57600080fd5b5051604080517f06061dfa0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152915191909216916306061dfa916024808301926020929190829003018186803b158015611cbf57600080fd5b505afa158015611cd3573d6000803e3d6000fd5b505050506040513d6020811015611ce957600080fd5b50515b90505b919050565b611cfc6151ce565b6001600160a01b0316611d0d614439565b6001600160a01b031614611d56576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526089602052604090205460ff16611dc3576040805162461bcd60e51b815260206004820152601560248201527f4b65657065722069732077686974656c69737465640000000000000000000000604482015290519081900360640190fd5b6001600160a01b03166000908152608960205260409020805460ff19169055565b611dec6151ce565b6001600160a01b0316611dfd614439565b6001600160a01b031614611e46576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b609b546001600160a01b03828116610100909204161415611eae576040805162461bcd60e51b815260206004820152601a60248201527f4d617264756b204761746520616c726561647920657869737473000000000000604482015290519081900360640190fd5b6001600160a01b038116611f09576040805162461bcd60e51b815260206004820152601d60248201527f4d617264756b2047617465206f7261636c65206d757374206578697374000000604482015290519081900360640190fd5b609b80546001600160a01b0383811661010081810274ffffffffffffffffffffffffffffffffffffffff001985161790945560408051918252939092041660208201819052825190927f345fc59169aa2ad8a518c40e50702bc683495ac687515df9441cabc39eef54ff928290030190a15050565b611f866151ce565b6001600160a01b0316611f97614439565b6001600160a01b031614611fe0576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6093805462ff0000191662010000179055565b611ffb6151ce565b6001600160a01b031661200c614439565b6001600160a01b031614612055576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526086602052604090205460ff166120c2576040805162461bcd60e51b815260206004820152601560248201527f47617264656e20646f6573206e6f742065786973740000000000000000000000604482015290519081900360640190fd5b806001600160a01b031663b49a60bb6040518163ffffffff1660e01b815260040160006040518083038186803b1580156120fb57600080fd5b505afa15801561210f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561213857600080fd5b810190808051604051939291908464010000000082111561215857600080fd5b90830190602082018581111561216d57600080fd5b825186602082028301116401000000008211171561218a57600080fd5b82525081516020918201928201910280838360005b838110156121b757818101518382015260200161219f565b5050505090500160405250505051600014612219576040805162461bcd60e51b815260206004820152601d60248201527f47617264656e2068617320616374697665207374726174656769657321000000604482015290519081900360640190fd5b61228681606580548060200260200160405190810160405280929190818152602001828054801561227357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612255575b50505050506151d290919063ffffffff16565b805161229a91606591602090910190615b3a565b506001600160a01b038116600081815260866020526040808220805460ff19169055517fb52dedfe431c6250e847edee5dca0a14cfaad5c6626218f99bd60c8ad9939a9f9190a250565b607281601481106122f457600080fd5b01546001600160a01b0316905081565b61230c6151ce565b6001600160a01b031661231d614439565b6001600160a01b031614612366576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b606c546001600160a01b03828116911614156123c9576040805162461bcd60e51b815260206004820152601a60248201527f497368746172204761746520616c726561647920657869737473000000000000604482015290519081900360640190fd5b6001600160a01b038116612424576040805162461bcd60e51b815260206004820152601d60248201527f4973687461722047617465206f7261636c65206d757374206578697374000000604482015290519081900360640190fd5b606c80546001600160a01b038381166001600160a01b03198316811790935560408051938452911660208301819052815190927f9d8291abf2224012a00e3e6cb815777395423c95684705c6a799205e926f38d492908290030190a15050565b6069546001600160a01b031681565b60995460ff1681565b6068546001600160a01b031681565b60915481565b608c54608d54608e54909192565b609354610100900460ff1681565b60955481565b6124db6151ce565b6001600160a01b03166124ec614439565b6001600160a01b031614612535576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b60005b815181101561258d5760016089600084848151811061255357fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101612538565b5050565b60866020526000908152604090205460ff1681565b6125ae6151ce565b6001600160a01b03166125bf614439565b6001600160a01b031614612608576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6361d00a004211612660576040805162461bcd60e51b815260206004820152601f60248201527f5472616e73666572732063616e6e6f7420626520656e61626c65642079657400604482015290519081900360640190fd5b6093805460ff19166001179055565b60606000808367ffffffffffffffff8111801561268b57600080fd5b506040519080825280602002602001820160405280156126b5578160200160208202803683370190505b50905060005b606554811015612905576000606582815481106126d457fe5b6000918252602082200154604080517fb49a60bb00000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169263b49a60bb92600480840193829003018186803b15801561273457600080fd5b505afa158015612748573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561277157600080fd5b810190808051604051939291908464010000000082111561279157600080fd5b9083019060208201858111156127a657600080fd5b82518660208202830111640100000000821117156127c357600080fd5b82525081516020918201928201910280838360005b838110156127f05781810151838201526020016127d8565b50505050905001604052505050905080516000141561280f57506128fd565b60005b81518110156128ec5781818151811061282757fe5b60200260200101516001600160a01b031663e4df5e1a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561286757600080fd5b505afa15801561287b573d6000803e3d6000fd5b505050506040513d602081101561289157600080fd5b5051156128d7578181815181106128a457fe5b60200260200101518486815181106128b857fe5b6001600160a01b03909216602092830291909101909101526001909401935b868514156128e4576128ec565b600101612812565b50858414156128fb5750612905565b505b6001016126bb565b509392505050565b6066818154811061291d57600080fd5b6000918252602090912001546001600160a01b0316905081565b60935460ff1681565b606b546001600160a01b031681565b6129576151ce565b6001600160a01b0316612968614439565b6001600160a01b0316146129b1576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152608960205260409020805460ff19166001179055565b6129dd6151ce565b6001600160a01b03166129ee614439565b6001600160a01b031614612a37576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001811015612a775760405162461bcd60e51b815260040180806020018281038252602d815260200180615bfa602d913960400191505060405180910390fd5b609855565b6001600160a01b031660009081526089602052604090205460ff1690565b6060806000835167ffffffffffffffff81118015612ab757600080fd5b50604051908082528060200260200182016040528015612ae1578160200160208202803683370190505b5090506000845167ffffffffffffffff81118015612afe57600080fd5b50604051908082528060200260200182016040528015612b28578160200160208202803683370190505b5090506000606b60009054906101000a90046001600160a01b03166001600160a01b031663ddaa26ad6040518163ffffffff1660e01b815260040160206040518083038186803b158015612b7b57600080fd5b505afa158015612b8f573d6000803e3d6000fd5b505050506040513d6020811015612ba557600080fd5b5051905060005b8651811015612ffd5760006001600160a01b0316878281518110612bcc57fe5b60200260200101516001600160a01b03161415612c30576040805162461bcd60e51b815260206004820152601360248201527f6e6f7420612076616c6964206164647265737300000000000000000000000000604482015290519081900360640190fd5b6000878281518110612c3e57fe5b60200260200101516001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015612c7e57600080fd5b505afa158015612c92573d6000803e3d6000fd5b505050506040513d6020811015612ca857600080fd5b50516001600160a01b03811660009081526086602052604090205490915060ff168015612d5d5750806001600160a01b03166306061dfa898481518110612ceb57fe5b60200260200101516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612d3057600080fd5b505afa158015612d44573d6000803e3d6000fd5b505050506040513d6020811015612d5a57600080fd5b50515b612dae576040805162461bcd60e51b815260206004820152601760248201527f6e6f7420612070726f746f636f6c207374726174656779000000000000000000604482015290519081900360640190fd5b604080516002808252606082018352600092602083019080368337019050509050888381518110612ddb57fe5b60200260200101516001600160a01b031663bf1dcfe26040518163ffffffff1660e01b815260040160e06040518083038186803b158015612e1b57600080fd5b505afa158015612e2f573d6000803e3d6000fd5b505050506040513d60e0811015612e4557600080fd5b50608081015160c09091015182518390600090612e5e57fe5b6020026020010183600181518110612e7257fe5b60200260200101828152508281525050508381600081518110612e9157fe5b6020026020010151108015612eb957508381600181518110612eaf57fe5b6020026020010151105b8015612f395750888381518110612ecc57fe5b60200260200101516001600160a01b031663e4df5e1a6040518163ffffffff1660e01b815260040160206040518083038186803b158015612f0c57600080fd5b505afa158015612f20573d6000803e3d6000fd5b505050506040513d6020811015612f3657600080fd5b50515b8015612f4457508315155b858481518110612f5057fe5b602002602001019015159081151581525050888381518110612f6e57fe5b60200260200101516001600160a01b03166303cddb2c6040518163ffffffff1660e01b815260040160206040518083038186803b158015612fae57600080fd5b505afa158015612fc2573d6000803e3d6000fd5b505050506040513d6020811015612fd857600080fd5b50518651879085908110612fe857fe5b60209081029190910101525050600101612bac565b5090935090915050915091565b609a6020526000908152604090205460ff1681565b60995461010090046001600160a01b031681565b60995461010090046001600160a01b03163314806130695750613054614439565b6001600160a01b0316336001600160a01b0316145b6130a45760405162461bcd60e51b8152600401808060200182810382526037815260200180615cff6037913960400191505060405180910390fd5b6130ac614439565b6001600160a01b0316336001600160a01b031614806130d357506001600160a01b03811615155b613124576040805162461bcd60e51b815260206004820152601e60248201527f477561726469616e2063616e6e6f742072656d6f76652068696d73656c660000604482015290519081900360640190fd5b609980546001600160a01b0383811661010081810274ffffffffffffffffffffffffffffffffffffffff00198516179094556040805194909304919091168084526020840191909152815190927f0613b6ee6a04f0d09f390e4d9318894b9f6ac7fd83897cd8d18896ba579c401e92908290030190a15050565b60905481565b6131ac6151ce565b6001600160a01b03166131bd614439565b6001600160a01b031614613206576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b609354610100900460ff1661329c576093805461ff001916610100179055606b54604080517f79fc904f00000000000000000000000000000000000000000000000000000000815290516001600160a01b03909216916379fc904f9160048082019260009290919082900301818387803b15801561328357600080fd5b505af1158015613297573d6000803e3d6000fd5b505050505b565b6071546000906001600160a01b03166132fe576040805162461bcd60e51b815260206004820181905260248201527f4e65656420612064656661756c7420747261646520696e746567726174696f6e604482015290519081900360640190fd5b609b54604080517f7804a5dc00000000000000000000000000000000000000000000000000000000815233600482015290516101009092046001600160a01b031691637804a5dc91602480820192602092909190829003018186803b15801561336657600080fd5b505afa15801561337a573d6000803e3d6000fd5b505050506040513d602081101561339057600080fd5b50518061339f575060995460ff165b6133da5760405162461bcd60e51b8152600401808060200182810382526027815260200180615d606027913960400191505060405180910390fd5b6000606a60009054906101000a90046001600160a01b03166001600160a01b0316638853932d8d338e8e8e8e8e8e8e8e6040518b63ffffffff1660e01b8152600401808b6001600160a01b031681526020018a6001600160a01b03168152602001806020018060200180602001898152602001806020018781526020018060200186810386528e818151815260200191508051906020019080838360005b83811015613490578181015183820152602001613478565b50505050905090810190601f1680156134bd5780820380516001836020036101000a031916815260200191505b5086810385528d5181528d516020918201918f019080838360005b838110156134f05781810151838201526020016134d8565b50505050905090810190601f16801561351d5780820380516001836020036101000a031916815260200191505b5086810384528c5181528c516020918201918e019080838360005b83811015613550578181015183820152602001613538565b50505050905090810190601f16801561357d5780820380516001836020036101000a031916815260200191505b5086810383528a8a828181526020019250602002808284376000838201819052601f909101601f19169092018881038452895181528951602091820193828c0193509102908190849084905b838110156135e15781810151838201526020016135c9565b505050509050019f50505050505050505050505050505050602060405180830381600087803b15801561361357600080fd5b505af1158015613627573d6000803e3d6000fd5b505050506040513d602081101561363d57600080fd5b505190506001600160a01b038c1673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc214158061366b575034155b15613699576136856001600160a01b038d1633308861524f565b6136996001600160a01b038d1682876152d7565b6001600160a01b03811660009081526086602052604090205460ff1615613707576040805162461bcd60e51b815260206004820152601560248201527f47617264656e20616c7265616479206578697374730000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260866020526040808220805460ff191660019081179091556065805480830182559084527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70180546001600160a01b0319168517905581517f695f3f5d000000000000000000000000000000000000000000000000000000008152600481018a9052602481018a90523360448201526064810191909152905163695f3f5d9234926084808201939182900301818588803b1580156137d357600080fd5b505af11580156137e7573d6000803e3d6000fd5b5050505050826000815181106137f957fe5b6020026020010151600014158061382557508260018151811061381857fe5b6020026020010151600014155b8061384557508260028151811061383857fe5b6020026020010151600014155b1561390d57606b5483516001600160a01b03909116906380334dbe908390869060009061386e57fe5b60200260200101518660018151811061388357fe5b60200260200101518760028151811061389857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001838152602001828152602001945050505050600060405180830381600087803b1580156138f457600080fd5b505af1158015613908573d6000803e3d6000fd5b505050505b60405133906001600160a01b038316907f3f9c315348eaae54d760380967a68b458af53312321328f584799f93283dc1de90600090a39b9a5050505050505050505050565b61395a6151ce565b6001600160a01b031661396b614439565b6001600160a01b0316146139b4576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116613a07576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b6071546001600160a01b0382811691161415613a6a576040805162461bcd60e51b815260206004820152601960248201527f41646472657373206d75737420626520646966666572656e7400000000000000604482015290519081900360640190fd5b607180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917fdc1fc9970870c3bb1ad5fce4186165c260c6492487c580adc8b8e361055ac9889181900360200190a25050565b60945481565b609b5460009060ff1680611cec5750506001600160a01b03166000908152609a602052604090205460ff1690565b601481565b60896020526000908152604090205460ff1681565b608b546001600160a01b031681565b609b5460ff1681565b613b356151ce565b6001600160a01b0316613b46614439565b6001600160a01b031614613b8f576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116613be2576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606d80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f57c1ea229271e944c7d975557caf535c1c974708de760613121827217db4ce8f9181900360200190a25050565b60995460009061010090046001600160a01b0316331480613c785750613c63614439565b6001600160a01b0316336001600160a01b0316145b613cb35760405162461bcd60e51b8152600401808060200182810382526030815260200180615c276030913960400191505060405180910390fd5b613cbb614439565b6001600160a01b0316336001600160a01b03161480613cdc57506001821515145b613d2d576040805162461bcd60e51b815260206004820152601660248201527f6f6e6c792061646d696e2063616e20756e706175736500000000000000000000604482015290519081900360640190fd5b609b805483151560ff1990911681179091556040805160208101929092528082526015828201527f477561726469616e20676c6f62616c20706175736500000000000000000000006060830152517fef159d9a32b2472e32b098f954f3ce62d232939f1c207070b584df1814de2de09181900360800190a15090565b613db16151ce565b6001600160a01b0316613dc2614439565b6001600160a01b031614613e0b576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b60985481565b608c5481565b60935462010000900460ff1681565b613e78615436565b6611c37937e0800060955566b1a2bc2ec5000060948190556000609681905560975567016345785d8a0000608c55608d55670b1a2bc2ec500000608e5567011c37937e080000608f5567025bf6196bd10000609055670a688906bd8b0000609155670214e8348c4f000060925560646098556099805460ff19169055565b613efe6151ce565b6001600160a01b0316613f0f614439565b6001600160a01b031614613f58576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116613fab576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606b80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f52cd8e0a7f86e9df123b3357ab2ee1c4cd0f5ac84ca8c98d93beb2679b2bb8069181900360200190a25050565b6140106151ce565b6001600160a01b0316614021614439565b6001600160a01b03161461406a576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b0381166140bd576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b608b80546001600160a01b038381166001600160a01b03198316811790935560408051938452911660208301819052815190927f8c3aa5f43a388513435861bf27dfad7829cd248696fed367c62d441f6295449692908290030190a15050565b60925481565b61412b6151ce565b6001600160a01b031661413c614439565b6001600160a01b031614614185576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526087602052604090205460ff166141f2576040805162461bcd60e51b815260206004820152601c60248201527f5265736572766520617373657420646f6573206e6f7420657869737400000000604482015290519081900360640190fd5b61425d816066805480602002602001604051908101604052809291908181526020018280548015612273576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116122555750505050506151d290919063ffffffff16565b805161427191606691602090910190615b3a565b506001600160a01b038116600081815260876020526040808220805460ff19169055517f2a4ae73bc76175e864e83c9843f11cf15a1bfcfa73152fb96d133416efee48ed9190a250565b6142c36151ce565b6001600160a01b03166142d4614439565b6001600160a01b03161461431d576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b60008111614372576040805162461bcd60e51b815260206004820152601d60248201527f5f6d696e5269736b79506169724c6971756964697479457468203e2030000000604482015290519081900360640190fd5b6001600160a01b03821660009081526087602052604090205460ff166143df576040805162461bcd60e51b815260206004820152601b60248201527f4e6565647320746f20626520612076616c696420726573657276650000000000604482015290519081900360640190fd5b6001600160a01b0382166000818152608a6020908152604091829020849055815184815291517fb78c51bc9bffa228585b84c38a0234fe0a48eb7aeb9f7a6a7a46f0ddd3270dd59281900390910190a25050565b608e5481565b60006144436154e8565b905090565b6065818154811061291d57600080fd5b606d546001600160a01b031681565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b60886020526000908152604090205460ff1681565b60876020526000908152604090205460ff1681565b6144b16151ce565b6001600160a01b03166144c2614439565b6001600160a01b03161461450b576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811661455e576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606f80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917e40167ea3901ef812c672b081813db3c0fc117c302ace151f1f9a907906e1669181900360200190a25050565b6145c26151ce565b6001600160a01b03166145d3614439565b6001600160a01b03161461461c576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6068546001600160a01b038281169116141561467f576040805162461bcd60e51b815260206004820152601c60248201527f47617264656e2056616c75657220616c72656164792065786973747300000000604482015290519081900360640190fd5b6001600160a01b0381166146da576040805162461bcd60e51b815260206004820152601860248201527f47617264656e2056616c756572206d7573742065786973740000000000000000604482015290519081900360640190fd5b606880546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917fb89b871cab0fe1b2d8c7cc3e16640ef9a9bf67f031e44947331820e025bf69479181900360200190a25050565b6060606680548060200260200160405190810160405280929190818152602001828054801561478f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614771575b5050505050905090565b6147a16151ce565b6001600160a01b03166147b2614439565b6001600160a01b0316146147fb576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6069546001600160a01b038281169116141561485e576040805162461bcd60e51b815260206004820152601b60248201527f5072696365206f7261636c6520616c7265616479206578697374730000000000604482015290519081900360640190fd5b6001600160a01b0381166148b9576040805162461bcd60e51b815260206004820152601760248201527f5072696365206f7261636c65206d757374206578697374000000000000000000604482015290519081900360640190fd5b606980546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f40bddd72ea96b80dae14e3d13e8ce2c4ecd2500d88c6c0004d24a00deab28f9c9181900360200190a25050565b606a546001600160a01b031681565b606c546001600160a01b031681565b608d5481565b608f5481565b6149486151ce565b6001600160a01b0316614959614439565b6001600160a01b0316146149a2576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b60995460ff16156149e45760405162461bcd60e51b815260040180806020018281038252602d815260200180615dbd602d913960400191505060405180910390fd5b6099805460ff19166001179055565b6149fb6151ce565b6001600160a01b0316614a0c614439565b6001600160a01b031614614a55576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b601460ff831610614aad576040805162461bcd60e51b815260206004820152601660248201527f4d6178206f7065726174696f6e73207265616368656400000000000000000000604482015290519081900360640190fd5b806001600160a01b031660728360ff1660148110614ac757fe5b01546001600160a01b03161415614b25576040805162461bcd60e51b815260206004820152601560248201527f4f7065726174696f6e20616c7265616479207365740000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116614b80576040805162461bcd60e51b815260206004820152601d60248201527f4f7065726174696f6e2061646472657373206d7573742065786973742e000000604482015290519081900360640190fd5b8060728360ff1660148110614b9157fe5b0180546001600160a01b039283166001600160a01b03199091161790556040805191831682525160ff8416917f2dc23b4bb2132388a8a9f2d4a7ec650d42dcd4c1c63e6495756fa25e8ecc6abd919081900360200190a25050565b606f546001600160a01b031681565b6060606580548060200260200160405190810160405280929190818152602001828054801561478f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311614771575050505050905090565b614c636151ce565b6001600160a01b0316614c74614439565b6001600160a01b031614614cbd576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116614d10576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606e80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f578086cc379999d712cf9ea4c177a02b092c028a84cf82d2dd590f2606b3169f9181900360200190a25050565b6071546001600160a01b031681565b614d846151ce565b6001600160a01b0316614d95614439565b6001600160a01b031614614dde576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116614e31576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606a80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f1e3307b8b00f4ec731298a869e9665a2662abd65a0e3fe9dd01fd53c35b0ae939181900360200190a25050565b606e546001600160a01b031681565b614ea56151ce565b6001600160a01b0316614eb6614439565b6001600160a01b031614614eff576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526087602052604090205460ff1615614f6d576040805162461bcd60e51b815260206004820152601b60248201527f5265736572766520617373657420616c72656164792061646465640000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260876020526040808220805460ff1916600190811790915560668054918201815583527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b03191684179055517f9fef46e320a4767c320315d2f597ee79c1e17c3c3330d026764d6a7dac8fcd5c9190a250565b608a6020526000908152604090205481565b608f5460905460915460925490919293565b6150256151ce565b6001600160a01b0316615036614439565b6001600160a01b03161461507f576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b0381166150c45760405162461bcd60e51b8152600401808060200182810382526026815260200180615bd46026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b615128615b9f565b60408051610280810191829052607280546001600160a01b031682529091601490607360208501808311614771575050505050905090565b6001600160a01b031660009081526087602052604090205460ff1690565b6000805b601460ff821610156151c55760728160ff166014811061519e57fe5b01546001600160a01b03848116911614156151bd576001915050611cef565b600101615182565b50600092915050565b3390565b60606000806151e185856154f7565b9150915080615237576040805162461bcd60e51b815260206004820152601560248201527f41646472657373206e6f7420696e2061727261792e0000000000000000000000604482015290519081900360640190fd5b6000615243868461555d565b5093506118d192505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526132979085906156c1565b8015806153765750604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561534857600080fd5b505afa15801561535c573d6000803e3d6000fd5b505050506040513d602081101561537257600080fd5b5051155b6153b15760405162461bcd60e51b8152600401808060200182810382526036815260200180615d876036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526154319084906156c1565b505050565b600054610100900460ff168061544f575061544f615772565b8061545d575060005460ff16155b6154985760405162461bcd60e51b815260040180806020018281038252602e815260200180615cb1602e913960400191505060405180910390fd5b600054610100900460ff161580156154c3576000805460ff1961ff0019909116610100171660011790555b6154cb615783565b6154d3615823565b80156154e5576000805461ff00191690555b50565b6033546001600160a01b031690565b81516000908190815b8181101561554a57846001600160a01b031686828151811061551e57fe5b60200260200101516001600160a01b03161415615542579250600191506155569050565b600101615500565b50600019600092509250505b9250929050565b81516060906000908084106155b9576040805162461bcd60e51b815260206004820152601860248201527f496e646578206d757374206265203c2041206c656e6774680000000000000000604482015290519081900360640190fd5b60006001820367ffffffffffffffff811180156155d557600080fd5b506040519080825280602002602001820160405280156155ff578160200160208202803683370190505b50905060005b8581101561564d5786818151811061561957fe5b602002602001015182828151811061562d57fe5b6001600160a01b0390921660209283029190910190910152600101615605565b50600185015b8281101561569e5786818151811061566757fe5b602002602001015182600183038151811061567e57fe5b6001600160a01b0390921660209283029190910190910152600101615653565b50808686815181106156ac57fe5b60200260200101519350935050509250929050565b6000615716826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661591c9092919063ffffffff16565b8051909150156154315780806020019051602081101561573557600080fd5b50516154315760405162461bcd60e51b815260040180806020018281038252602a815260200180615d36602a913960400191505060405180910390fd5b600061577d30615935565b15905090565b600054610100900460ff168061579c575061579c615772565b806157aa575060005460ff16155b6157e55760405162461bcd60e51b815260040180806020018281038252602e815260200180615cb1602e913960400191505060405180910390fd5b600054610100900460ff161580156154d3576000805460ff1961ff00199091166101001716600117905580156154e5576000805461ff001916905550565b600054610100900460ff168061583c575061583c615772565b8061584a575060005460ff16155b6158855760405162461bcd60e51b815260040180806020018281038252602e815260200180615cb1602e913960400191505060405180910390fd5b600054610100900460ff161580156158b0576000805460ff1961ff0019909116610100171660011790555b60006158ba6151ce565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156154e5576000805461ff001916905550565b606061592b848460008561593b565b90505b9392505050565b3b151590565b60608247101561597c5760405162461bcd60e51b8152600401808060200182810382526026815260200180615c576026913960400191505060405180910390fd5b61598585615935565b6159d6576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310615a145780518252601f1990920191602091820191016159f5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114615a76576040519150601f19603f3d011682016040523d82523d6000602084013e615a7b565b606091505b5091509150615a8b828286615a96565b979650505050505050565b60608315615aa557508161592e565b825115615ab55782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015615aff578181015183820152602001615ae7565b50505050905090810190601f168015615b2c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b828054828255906000526020600020908101928215615b8f579160200282015b82811115615b8f57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190615b5a565b50615b9b929150615bbe565b5090565b6040518061028001604052806014906020820280368337509192915050565b5b80821115615b9b5760008155600101615bbf56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f6e7472696275746f72732063616e6e6f74206265206c657373207468616e2031207065722067617264656e6f6e6c7920706175736520677561726469616e20616e64206f776e65722063616e20706175736520676c6f62616c6c79416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f6e6c7920706175736520677561726469616e20616e64206f776e65722063616e20706175736520696e646976696475616c6c79496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726f6e6c7920706175736520677561726469616e20616e64206f776e65722063616e2075706461746520706175736520677561726469616e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645573657220646f6573206e6f742068617665206372656174696f6e207065726d697373696f6e735361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e636547617264656e206372656174696f6e20697320616c7265616479206f70656e20746f20746865207075626c6963a2646970667358221220a19a383d213cdae7047348b148a3a0ecfe589c1e3bb65eee744cf66b05bd29cb64736f6c63430007060033",
  "deployedBytecode": "0x60806040526004361061057e5760003560e01c806369685513116102d5578063bc09228311610184578063daec2a1a116100e1578063f04ec54711610095578063f2fde38b1161006f578063f2fde38b14611630578063f948e50a14611663578063f979cdd9146116b15761057e565b8063f04ec5471461158f578063f05017eb146115c2578063f142c3bc146115f55761057e565b8063e6e60513116100c6578063e6e6051314611532578063e973f4e914611547578063ead4c1cf1461157a5761057e565b8063daec2a1a146114ea578063dfaef58f146114ff5761057e565b8063c9f7f2ed11610138578063d196f61f1161011d578063d196f61f14611484578063d276cbdc14611499578063d6a45aa5146114d55761057e565b8063c9f7f2ed1461145a578063cfd180191461146f5761057e565b8063c2d38e7911610169578063c2d38e79146113fd578063c80aad6314611430578063c8ed947f146114455761057e565b8063bc092283146113b5578063bc819ea6146113e85761057e565b806388e8dc75116102325780639ef35710116101e6578063ad9d791d116101cb578063ad9d791d1461131c578063b0ecdf801461134f578063b82efd4f146113825761057e565b80639ef35710146112f2578063ad5c4648146113075761057e565b80638d78fb79116102175780638d78fb791461129e5780638da5cb5b146112b35780639e18eb39146112c85761057e565b806388e8dc751461123257806389790429146112655761057e565b80637f80e05b1161028957806385d5d0361161026e57806385d5d036146111b7578063867b6efa146111ea57806386f2bc811461121d5761057e565b80637f80e05b1461118d5780638129fc1c146111a25761057e565b8063715018a6116102ba578063715018a61461114e5780637177fec9146111635780637c4f0a36146111785761057e565b806369685513146110ef57806369a6b3db146111225761057e565b806337973e5f116104315780634a44ff441161038e5780635b14f183116103425780635e192de6116103275780635e192de61461109257806361d027b3146110c557806362a4bf05146110da5761057e565b80635b14f183146110345780635dc2803a146110675761057e565b806356161472116103735780635616147214610cc15780635618b5b214610fec578063568c08131461101f5761057e565b80634a44ff4414610c9757806352aeec7714610cac5761057e565b8063411137c3116103e5578063447a1366116103ca578063447a136614610c1c578063452a932014610c4f57806348bde20c14610c645761057e565b8063411137c314610aa05780634365a8a814610ad35761057e565b80633f2a5540116104165780633f2a554014610a2e5780634032b72b14610a43578063404c363914610a765761057e565b806337973e5f146109ef578063393bfe4914610a195761057e565b806327e4acc7116104df5780633137547711610493578063364d118111610478578063364d11811461092d57806336c148b714610960578063374c64e2146109755761057e565b80633137547714610868578063314a83c91461087d5761057e565b80632b9db0bf116104c45780632b9db0bf146107f95780632e0519cf1461082057806330944c62146108535761057e565b806327e4acc7146107cf578063294d237c146107e45761057e565b806317a2571411610536578063201041981161051b578063201041981461075d57806322c7fa8f146107875780632630c12f146107ba5761057e565b806317a257141461071557806318b9e2521461072a5761057e565b806313bc6d4b1161056757806313bc6d4b1461067a57806314ae9f2e146106ad57806316d9c070146106e25761057e565b80630306f6d2146105835780630ebdb9a214610649575b600080fd5b34801561058f57600080fd5b50610635600480360360408110156105a657600080fd5b8101906020810181356401000000008111156105c157600080fd5b8201836020820111156105d357600080fd5b803590602001918460208302840111640100000000831117156105f557600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050505035151590506116e4565b604080519115158252519081900360200190f35b34801561065557600080fd5b5061065e6118d7565b604080516001600160a01b039092168252519081900360200190f35b34801561068657600080fd5b506106356004803603602081101561069d57600080fd5b50356001600160a01b03166118eb565b3480156106b957600080fd5b506106e0600480360360208110156106d057600080fd5b50356001600160a01b0316611cf4565b005b3480156106ee57600080fd5b506106e06004803603602081101561070557600080fd5b50356001600160a01b0316611de4565b34801561072157600080fd5b506106e0611f7e565b34801561073657600080fd5b506106e06004803603602081101561074d57600080fd5b50356001600160a01b0316611ff3565b34801561076957600080fd5b5061065e6004803603602081101561078057600080fd5b50356122e4565b34801561079357600080fd5b506106e0600480360360208110156107aa57600080fd5b50356001600160a01b0316612304565b3480156107c657600080fd5b5061065e612484565b3480156107db57600080fd5b50610635612493565b3480156107f057600080fd5b5061065e61249c565b34801561080557600080fd5b5061080e6124ab565b60408051918252519081900360200190f35b34801561082c57600080fd5b506108356124b1565b60408051938452602084019290925282820152519081900360600190f35b34801561085f57600080fd5b506106356124bf565b34801561087457600080fd5b5061080e6124cd565b34801561088957600080fd5b506106e0600480360360208110156108a057600080fd5b8101906020810181356401000000008111156108bb57600080fd5b8201836020820111156108cd57600080fd5b803590602001918460208302840111640100000000831117156108ef57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506124d3945050505050565b34801561093957600080fd5b506106356004803603602081101561095057600080fd5b50356001600160a01b0316612591565b34801561096c57600080fd5b506106e06125a6565b34801561098157600080fd5b5061099f6004803603602081101561099857600080fd5b503561266f565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156109db5781810151838201526020016109c3565b505050509050019250505060405180910390f35b3480156109fb57600080fd5b5061065e60048036036020811015610a1257600080fd5b503561290d565b348015610a2557600080fd5b50610635612937565b348015610a3a57600080fd5b5061065e612940565b348015610a4f57600080fd5b506106e060048036036020811015610a6657600080fd5b50356001600160a01b031661294f565b348015610a8257600080fd5b506106e060048036036020811015610a9957600080fd5b50356129d5565b348015610aac57600080fd5b5061063560048036036020811015610ac357600080fd5b50356001600160a01b0316612a7c565b348015610adf57600080fd5b50610b8360048036036020811015610af657600080fd5b810190602081018135640100000000811115610b1157600080fd5b820183602082011115610b2357600080fd5b80359060200191846020830284011164010000000083111715610b4557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612a9a945050505050565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610bc7578181015183820152602001610baf565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015610c06578181015183820152602001610bee565b5050505090500194505050505060405180910390f35b348015610c2857600080fd5b5061063560048036036020811015610c3f57600080fd5b50356001600160a01b031661300a565b348015610c5b57600080fd5b5061065e61301f565b348015610c7057600080fd5b506106e060048036036020811015610c8757600080fd5b50356001600160a01b0316613033565b348015610ca357600080fd5b5061080e61319e565b348015610cb857600080fd5b506106e06131a4565b61065e6004803603610120811015610cd857600080fd5b6001600160a01b038235169190810190604081016020820135640100000000811115610d0357600080fd5b820183602082011115610d1557600080fd5b80359060200191846001830284011164010000000083111715610d3757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050640100000000811115610d8a57600080fd5b820183602082011115610d9c57600080fd5b80359060200191846001830284011164010000000083111715610dbe57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050640100000000811115610e1157600080fd5b820183602082011115610e2357600080fd5b80359060200191846001830284011164010000000083111715610e4557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092958435959094909350604081019250602001359050640100000000811115610ea057600080fd5b820183602082011115610eb257600080fd5b80359060200191846020830284011164010000000083111715610ed457600080fd5b91939092823592604081019060200135640100000000811115610ef657600080fd5b820183602082011115610f0857600080fd5b80359060200191846020830284011164010000000083111715610f2a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610f7a57600080fd5b820183602082011115610f8c57600080fd5b80359060200191846020830284011164010000000083111715610fae57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061329e945050505050565b348015610ff857600080fd5b506106e06004803603602081101561100f57600080fd5b50356001600160a01b0316613952565b34801561102b57600080fd5b5061080e613ac7565b34801561104057600080fd5b506106356004803603602081101561105757600080fd5b50356001600160a01b0316613acd565b34801561107357600080fd5b5061107c613afb565b6040805160ff9092168252519081900360200190f35b34801561109e57600080fd5b50610635600480360360208110156110b557600080fd5b50356001600160a01b0316613b00565b3480156110d157600080fd5b5061065e613b15565b3480156110e657600080fd5b50610635613b24565b3480156110fb57600080fd5b506106e06004803603602081101561111257600080fd5b50356001600160a01b0316613b2d565b34801561112e57600080fd5b506106356004803603602081101561114557600080fd5b50351515613c3f565b34801561115a57600080fd5b506106e0613da9565b34801561116f57600080fd5b5061080e613e55565b34801561118457600080fd5b5061080e613e5b565b34801561119957600080fd5b50610635613e61565b3480156111ae57600080fd5b506106e0613e70565b3480156111c357600080fd5b506106e0600480360360208110156111da57600080fd5b50356001600160a01b0316613ef6565b3480156111f657600080fd5b506106e06004803603602081101561120d57600080fd5b50356001600160a01b0316614008565b34801561122957600080fd5b5061080e61411d565b34801561123e57600080fd5b506106e06004803603602081101561125557600080fd5b50356001600160a01b0316614123565b34801561127157600080fd5b506106e06004803603604081101561128857600080fd5b506001600160a01b0381351690602001356142bb565b3480156112aa57600080fd5b5061080e614433565b3480156112bf57600080fd5b5061065e614439565b3480156112d457600080fd5b5061065e600480360360208110156112eb57600080fd5b5035614448565b3480156112fe57600080fd5b5061065e614458565b34801561131357600080fd5b5061065e614467565b34801561132857600080fd5b506106356004803603602081101561133f57600080fd5b50356001600160a01b031661447f565b34801561135b57600080fd5b506106356004803603602081101561137257600080fd5b50356001600160a01b0316614494565b34801561138e57600080fd5b506106e0600480360360208110156113a557600080fd5b50356001600160a01b03166144a9565b3480156113c157600080fd5b506106e0600480360360208110156113d857600080fd5b50356001600160a01b03166145ba565b3480156113f457600080fd5b5061099f614737565b34801561140957600080fd5b506106e06004803603602081101561142057600080fd5b50356001600160a01b0316614799565b34801561143c57600080fd5b5061065e614916565b34801561145157600080fd5b5061065e614925565b34801561146657600080fd5b5061080e614934565b34801561147b57600080fd5b5061080e61493a565b34801561149057600080fd5b506106e0614940565b3480156114a557600080fd5b506106e0600480360360408110156114bc57600080fd5b50803560ff1690602001356001600160a01b03166149f3565b3480156114e157600080fd5b5061065e614bec565b3480156114f657600080fd5b5061099f614bfb565b34801561150b57600080fd5b506106e06004803603602081101561152257600080fd5b50356001600160a01b0316614c5b565b34801561153e57600080fd5b5061065e614d6d565b34801561155357600080fd5b506106e06004803603602081101561156a57600080fd5b50356001600160a01b0316614d7c565b34801561158657600080fd5b5061065e614e8e565b34801561159b57600080fd5b506106e0600480360360208110156115b257600080fd5b50356001600160a01b0316614e9d565b3480156115ce57600080fd5b5061080e600480360360208110156115e557600080fd5b50356001600160a01b0316614ff9565b34801561160157600080fd5b5061160a61500b565b604080519485526020850193909352838301919091526060830152519081900360800190f35b34801561163c57600080fd5b506106e06004803603602081101561165357600080fd5b50356001600160a01b031661501d565b34801561166f57600080fd5b50611678615120565b604051808261028080838360005b8381101561169e578181015183820152602001611686565b5050505090500191505060405180910390f35b3480156116bd57600080fd5b50610635600480360360208110156116d457600080fd5b50356001600160a01b0316615160565b60995460009061010090046001600160a01b031633148061171d5750611708614439565b6001600160a01b0316336001600160a01b0316145b6117585760405162461bcd60e51b8152600401808060200182810382526034815260200180615c7d6034913960400191505060405180910390fd5b611760614439565b6001600160a01b0316336001600160a01b0316148061178157506001821515145b6117d2576040805162461bcd60e51b815260206004820152601660248201527f6f6e6c792061646d696e2063616e20756e706175736500000000000000000000604482015290519081900360640190fd5b60005b83518110156118cc5782609a60008684815181106117ef57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055507f14fc4a89e124f9817afd6bc9b8270d50250d5ff6f0711b687f6fa4c34decf1cd84828151811061185b57fe5b6020026020010151846040518080602001846001600160a01b031681526020018315158152602001828103825260198152602001807f477561726469616e20696e646976696475616c20706175736500000000000000815250602001935050505060405180910390a16001016117d5565b508190505b92915050565b609b5461010090046001600160a01b031681565b6001600160a01b03811660009081526086602052604081205460ff168061191f57506068546001600160a01b038381169116145b8061193757506069546001600160a01b038381169116145b8061194f5750606a546001600160a01b038381169116145b8061196757506071546001600160a01b038381169116145b8061197f5750606d546001600160a01b038381169116145b806119975750606b546001600160a01b038381169116145b806119ba5750816001600160a01b03166119af614439565b6001600160a01b0316145b806119cd57506001600160a01b03821630145b806119dc57506119dc8261517e565b80611b64575060866000836001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015611a1f57600080fd5b505afa158015611a33573d6000803e3d6000fd5b505050506040513d6020811015611a4957600080fd5b50516001600160a01b0316815260208101919091526040016000205460ff168015611b645750816001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015611aa857600080fd5b505afa158015611abc573d6000803e3d6000fd5b505050506040513d6020811015611ad257600080fd5b5051604080517f3a8219250000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015291519190921691633a821925916024808301926020929190829003018186803b158015611b3757600080fd5b505afa158015611b4b573d6000803e3d6000fd5b505050506040513d6020811015611b6157600080fd5b50515b80611cec575060866000836001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015611ba757600080fd5b505afa158015611bbb573d6000803e3d6000fd5b505050506040513d6020811015611bd157600080fd5b50516001600160a01b0316815260208101919091526040016000205460ff168015611cec5750816001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015611c3057600080fd5b505afa158015611c44573d6000803e3d6000fd5b505050506040513d6020811015611c5a57600080fd5b5051604080517f06061dfa0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152915191909216916306061dfa916024808301926020929190829003018186803b158015611cbf57600080fd5b505afa158015611cd3573d6000803e3d6000fd5b505050506040513d6020811015611ce957600080fd5b50515b90505b919050565b611cfc6151ce565b6001600160a01b0316611d0d614439565b6001600160a01b031614611d56576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526089602052604090205460ff16611dc3576040805162461bcd60e51b815260206004820152601560248201527f4b65657065722069732077686974656c69737465640000000000000000000000604482015290519081900360640190fd5b6001600160a01b03166000908152608960205260409020805460ff19169055565b611dec6151ce565b6001600160a01b0316611dfd614439565b6001600160a01b031614611e46576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b609b546001600160a01b03828116610100909204161415611eae576040805162461bcd60e51b815260206004820152601a60248201527f4d617264756b204761746520616c726561647920657869737473000000000000604482015290519081900360640190fd5b6001600160a01b038116611f09576040805162461bcd60e51b815260206004820152601d60248201527f4d617264756b2047617465206f7261636c65206d757374206578697374000000604482015290519081900360640190fd5b609b80546001600160a01b0383811661010081810274ffffffffffffffffffffffffffffffffffffffff001985161790945560408051918252939092041660208201819052825190927f345fc59169aa2ad8a518c40e50702bc683495ac687515df9441cabc39eef54ff928290030190a15050565b611f866151ce565b6001600160a01b0316611f97614439565b6001600160a01b031614611fe0576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6093805462ff0000191662010000179055565b611ffb6151ce565b6001600160a01b031661200c614439565b6001600160a01b031614612055576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526086602052604090205460ff166120c2576040805162461bcd60e51b815260206004820152601560248201527f47617264656e20646f6573206e6f742065786973740000000000000000000000604482015290519081900360640190fd5b806001600160a01b031663b49a60bb6040518163ffffffff1660e01b815260040160006040518083038186803b1580156120fb57600080fd5b505afa15801561210f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561213857600080fd5b810190808051604051939291908464010000000082111561215857600080fd5b90830190602082018581111561216d57600080fd5b825186602082028301116401000000008211171561218a57600080fd5b82525081516020918201928201910280838360005b838110156121b757818101518382015260200161219f565b5050505090500160405250505051600014612219576040805162461bcd60e51b815260206004820152601d60248201527f47617264656e2068617320616374697665207374726174656769657321000000604482015290519081900360640190fd5b61228681606580548060200260200160405190810160405280929190818152602001828054801561227357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612255575b50505050506151d290919063ffffffff16565b805161229a91606591602090910190615b3a565b506001600160a01b038116600081815260866020526040808220805460ff19169055517fb52dedfe431c6250e847edee5dca0a14cfaad5c6626218f99bd60c8ad9939a9f9190a250565b607281601481106122f457600080fd5b01546001600160a01b0316905081565b61230c6151ce565b6001600160a01b031661231d614439565b6001600160a01b031614612366576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b606c546001600160a01b03828116911614156123c9576040805162461bcd60e51b815260206004820152601a60248201527f497368746172204761746520616c726561647920657869737473000000000000604482015290519081900360640190fd5b6001600160a01b038116612424576040805162461bcd60e51b815260206004820152601d60248201527f4973687461722047617465206f7261636c65206d757374206578697374000000604482015290519081900360640190fd5b606c80546001600160a01b038381166001600160a01b03198316811790935560408051938452911660208301819052815190927f9d8291abf2224012a00e3e6cb815777395423c95684705c6a799205e926f38d492908290030190a15050565b6069546001600160a01b031681565b60995460ff1681565b6068546001600160a01b031681565b60915481565b608c54608d54608e54909192565b609354610100900460ff1681565b60955481565b6124db6151ce565b6001600160a01b03166124ec614439565b6001600160a01b031614612535576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b60005b815181101561258d5760016089600084848151811061255357fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101612538565b5050565b60866020526000908152604090205460ff1681565b6125ae6151ce565b6001600160a01b03166125bf614439565b6001600160a01b031614612608576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6361d00a004211612660576040805162461bcd60e51b815260206004820152601f60248201527f5472616e73666572732063616e6e6f7420626520656e61626c65642079657400604482015290519081900360640190fd5b6093805460ff19166001179055565b60606000808367ffffffffffffffff8111801561268b57600080fd5b506040519080825280602002602001820160405280156126b5578160200160208202803683370190505b50905060005b606554811015612905576000606582815481106126d457fe5b6000918252602082200154604080517fb49a60bb00000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169263b49a60bb92600480840193829003018186803b15801561273457600080fd5b505afa158015612748573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561277157600080fd5b810190808051604051939291908464010000000082111561279157600080fd5b9083019060208201858111156127a657600080fd5b82518660208202830111640100000000821117156127c357600080fd5b82525081516020918201928201910280838360005b838110156127f05781810151838201526020016127d8565b50505050905001604052505050905080516000141561280f57506128fd565b60005b81518110156128ec5781818151811061282757fe5b60200260200101516001600160a01b031663e4df5e1a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561286757600080fd5b505afa15801561287b573d6000803e3d6000fd5b505050506040513d602081101561289157600080fd5b5051156128d7578181815181106128a457fe5b60200260200101518486815181106128b857fe5b6001600160a01b03909216602092830291909101909101526001909401935b868514156128e4576128ec565b600101612812565b50858414156128fb5750612905565b505b6001016126bb565b509392505050565b6066818154811061291d57600080fd5b6000918252602090912001546001600160a01b0316905081565b60935460ff1681565b606b546001600160a01b031681565b6129576151ce565b6001600160a01b0316612968614439565b6001600160a01b0316146129b1576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152608960205260409020805460ff19166001179055565b6129dd6151ce565b6001600160a01b03166129ee614439565b6001600160a01b031614612a37576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001811015612a775760405162461bcd60e51b815260040180806020018281038252602d815260200180615bfa602d913960400191505060405180910390fd5b609855565b6001600160a01b031660009081526089602052604090205460ff1690565b6060806000835167ffffffffffffffff81118015612ab757600080fd5b50604051908082528060200260200182016040528015612ae1578160200160208202803683370190505b5090506000845167ffffffffffffffff81118015612afe57600080fd5b50604051908082528060200260200182016040528015612b28578160200160208202803683370190505b5090506000606b60009054906101000a90046001600160a01b03166001600160a01b031663ddaa26ad6040518163ffffffff1660e01b815260040160206040518083038186803b158015612b7b57600080fd5b505afa158015612b8f573d6000803e3d6000fd5b505050506040513d6020811015612ba557600080fd5b5051905060005b8651811015612ffd5760006001600160a01b0316878281518110612bcc57fe5b60200260200101516001600160a01b03161415612c30576040805162461bcd60e51b815260206004820152601360248201527f6e6f7420612076616c6964206164647265737300000000000000000000000000604482015290519081900360640190fd5b6000878281518110612c3e57fe5b60200260200101516001600160a01b03166356ba88b86040518163ffffffff1660e01b815260040160206040518083038186803b158015612c7e57600080fd5b505afa158015612c92573d6000803e3d6000fd5b505050506040513d6020811015612ca857600080fd5b50516001600160a01b03811660009081526086602052604090205490915060ff168015612d5d5750806001600160a01b03166306061dfa898481518110612ceb57fe5b60200260200101516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015612d3057600080fd5b505afa158015612d44573d6000803e3d6000fd5b505050506040513d6020811015612d5a57600080fd5b50515b612dae576040805162461bcd60e51b815260206004820152601760248201527f6e6f7420612070726f746f636f6c207374726174656779000000000000000000604482015290519081900360640190fd5b604080516002808252606082018352600092602083019080368337019050509050888381518110612ddb57fe5b60200260200101516001600160a01b031663bf1dcfe26040518163ffffffff1660e01b815260040160e06040518083038186803b158015612e1b57600080fd5b505afa158015612e2f573d6000803e3d6000fd5b505050506040513d60e0811015612e4557600080fd5b50608081015160c09091015182518390600090612e5e57fe5b6020026020010183600181518110612e7257fe5b60200260200101828152508281525050508381600081518110612e9157fe5b6020026020010151108015612eb957508381600181518110612eaf57fe5b6020026020010151105b8015612f395750888381518110612ecc57fe5b60200260200101516001600160a01b031663e4df5e1a6040518163ffffffff1660e01b815260040160206040518083038186803b158015612f0c57600080fd5b505afa158015612f20573d6000803e3d6000fd5b505050506040513d6020811015612f3657600080fd5b50515b8015612f4457508315155b858481518110612f5057fe5b602002602001019015159081151581525050888381518110612f6e57fe5b60200260200101516001600160a01b03166303cddb2c6040518163ffffffff1660e01b815260040160206040518083038186803b158015612fae57600080fd5b505afa158015612fc2573d6000803e3d6000fd5b505050506040513d6020811015612fd857600080fd5b50518651879085908110612fe857fe5b60209081029190910101525050600101612bac565b5090935090915050915091565b609a6020526000908152604090205460ff1681565b60995461010090046001600160a01b031681565b60995461010090046001600160a01b03163314806130695750613054614439565b6001600160a01b0316336001600160a01b0316145b6130a45760405162461bcd60e51b8152600401808060200182810382526037815260200180615cff6037913960400191505060405180910390fd5b6130ac614439565b6001600160a01b0316336001600160a01b031614806130d357506001600160a01b03811615155b613124576040805162461bcd60e51b815260206004820152601e60248201527f477561726469616e2063616e6e6f742072656d6f76652068696d73656c660000604482015290519081900360640190fd5b609980546001600160a01b0383811661010081810274ffffffffffffffffffffffffffffffffffffffff00198516179094556040805194909304919091168084526020840191909152815190927f0613b6ee6a04f0d09f390e4d9318894b9f6ac7fd83897cd8d18896ba579c401e92908290030190a15050565b60905481565b6131ac6151ce565b6001600160a01b03166131bd614439565b6001600160a01b031614613206576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b609354610100900460ff1661329c576093805461ff001916610100179055606b54604080517f79fc904f00000000000000000000000000000000000000000000000000000000815290516001600160a01b03909216916379fc904f9160048082019260009290919082900301818387803b15801561328357600080fd5b505af1158015613297573d6000803e3d6000fd5b505050505b565b6071546000906001600160a01b03166132fe576040805162461bcd60e51b815260206004820181905260248201527f4e65656420612064656661756c7420747261646520696e746567726174696f6e604482015290519081900360640190fd5b609b54604080517f7804a5dc00000000000000000000000000000000000000000000000000000000815233600482015290516101009092046001600160a01b031691637804a5dc91602480820192602092909190829003018186803b15801561336657600080fd5b505afa15801561337a573d6000803e3d6000fd5b505050506040513d602081101561339057600080fd5b50518061339f575060995460ff165b6133da5760405162461bcd60e51b8152600401808060200182810382526027815260200180615d606027913960400191505060405180910390fd5b6000606a60009054906101000a90046001600160a01b03166001600160a01b0316638853932d8d338e8e8e8e8e8e8e8e6040518b63ffffffff1660e01b8152600401808b6001600160a01b031681526020018a6001600160a01b03168152602001806020018060200180602001898152602001806020018781526020018060200186810386528e818151815260200191508051906020019080838360005b83811015613490578181015183820152602001613478565b50505050905090810190601f1680156134bd5780820380516001836020036101000a031916815260200191505b5086810385528d5181528d516020918201918f019080838360005b838110156134f05781810151838201526020016134d8565b50505050905090810190601f16801561351d5780820380516001836020036101000a031916815260200191505b5086810384528c5181528c516020918201918e019080838360005b83811015613550578181015183820152602001613538565b50505050905090810190601f16801561357d5780820380516001836020036101000a031916815260200191505b5086810383528a8a828181526020019250602002808284376000838201819052601f909101601f19169092018881038452895181528951602091820193828c0193509102908190849084905b838110156135e15781810151838201526020016135c9565b505050509050019f50505050505050505050505050505050602060405180830381600087803b15801561361357600080fd5b505af1158015613627573d6000803e3d6000fd5b505050506040513d602081101561363d57600080fd5b505190506001600160a01b038c1673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc214158061366b575034155b15613699576136856001600160a01b038d1633308861524f565b6136996001600160a01b038d1682876152d7565b6001600160a01b03811660009081526086602052604090205460ff1615613707576040805162461bcd60e51b815260206004820152601560248201527f47617264656e20616c7265616479206578697374730000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260866020526040808220805460ff191660019081179091556065805480830182559084527f8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c70180546001600160a01b0319168517905581517f695f3f5d000000000000000000000000000000000000000000000000000000008152600481018a9052602481018a90523360448201526064810191909152905163695f3f5d9234926084808201939182900301818588803b1580156137d357600080fd5b505af11580156137e7573d6000803e3d6000fd5b5050505050826000815181106137f957fe5b6020026020010151600014158061382557508260018151811061381857fe5b6020026020010151600014155b8061384557508260028151811061383857fe5b6020026020010151600014155b1561390d57606b5483516001600160a01b03909116906380334dbe908390869060009061386e57fe5b60200260200101518660018151811061388357fe5b60200260200101518760028151811061389857fe5b60200260200101516040518563ffffffff1660e01b815260040180856001600160a01b03168152602001848152602001838152602001828152602001945050505050600060405180830381600087803b1580156138f457600080fd5b505af1158015613908573d6000803e3d6000fd5b505050505b60405133906001600160a01b038316907f3f9c315348eaae54d760380967a68b458af53312321328f584799f93283dc1de90600090a39b9a5050505050505050505050565b61395a6151ce565b6001600160a01b031661396b614439565b6001600160a01b0316146139b4576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116613a07576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b6071546001600160a01b0382811691161415613a6a576040805162461bcd60e51b815260206004820152601960248201527f41646472657373206d75737420626520646966666572656e7400000000000000604482015290519081900360640190fd5b607180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917fdc1fc9970870c3bb1ad5fce4186165c260c6492487c580adc8b8e361055ac9889181900360200190a25050565b60945481565b609b5460009060ff1680611cec5750506001600160a01b03166000908152609a602052604090205460ff1690565b601481565b60896020526000908152604090205460ff1681565b608b546001600160a01b031681565b609b5460ff1681565b613b356151ce565b6001600160a01b0316613b46614439565b6001600160a01b031614613b8f576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116613be2576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606d80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f57c1ea229271e944c7d975557caf535c1c974708de760613121827217db4ce8f9181900360200190a25050565b60995460009061010090046001600160a01b0316331480613c785750613c63614439565b6001600160a01b0316336001600160a01b0316145b613cb35760405162461bcd60e51b8152600401808060200182810382526030815260200180615c276030913960400191505060405180910390fd5b613cbb614439565b6001600160a01b0316336001600160a01b03161480613cdc57506001821515145b613d2d576040805162461bcd60e51b815260206004820152601660248201527f6f6e6c792061646d696e2063616e20756e706175736500000000000000000000604482015290519081900360640190fd5b609b805483151560ff1990911681179091556040805160208101929092528082526015828201527f477561726469616e20676c6f62616c20706175736500000000000000000000006060830152517fef159d9a32b2472e32b098f954f3ce62d232939f1c207070b584df1814de2de09181900360800190a15090565b613db16151ce565b6001600160a01b0316613dc2614439565b6001600160a01b031614613e0b576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b60985481565b608c5481565b60935462010000900460ff1681565b613e78615436565b6611c37937e0800060955566b1a2bc2ec5000060948190556000609681905560975567016345785d8a0000608c55608d55670b1a2bc2ec500000608e5567011c37937e080000608f5567025bf6196bd10000609055670a688906bd8b0000609155670214e8348c4f000060925560646098556099805460ff19169055565b613efe6151ce565b6001600160a01b0316613f0f614439565b6001600160a01b031614613f58576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116613fab576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606b80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f52cd8e0a7f86e9df123b3357ab2ee1c4cd0f5ac84ca8c98d93beb2679b2bb8069181900360200190a25050565b6140106151ce565b6001600160a01b0316614021614439565b6001600160a01b03161461406a576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b0381166140bd576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b608b80546001600160a01b038381166001600160a01b03198316811790935560408051938452911660208301819052815190927f8c3aa5f43a388513435861bf27dfad7829cd248696fed367c62d441f6295449692908290030190a15050565b60925481565b61412b6151ce565b6001600160a01b031661413c614439565b6001600160a01b031614614185576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526087602052604090205460ff166141f2576040805162461bcd60e51b815260206004820152601c60248201527f5265736572766520617373657420646f6573206e6f7420657869737400000000604482015290519081900360640190fd5b61425d816066805480602002602001604051908101604052809291908181526020018280548015612273576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116122555750505050506151d290919063ffffffff16565b805161427191606691602090910190615b3a565b506001600160a01b038116600081815260876020526040808220805460ff19169055517f2a4ae73bc76175e864e83c9843f11cf15a1bfcfa73152fb96d133416efee48ed9190a250565b6142c36151ce565b6001600160a01b03166142d4614439565b6001600160a01b03161461431d576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b60008111614372576040805162461bcd60e51b815260206004820152601d60248201527f5f6d696e5269736b79506169724c6971756964697479457468203e2030000000604482015290519081900360640190fd5b6001600160a01b03821660009081526087602052604090205460ff166143df576040805162461bcd60e51b815260206004820152601b60248201527f4e6565647320746f20626520612076616c696420726573657276650000000000604482015290519081900360640190fd5b6001600160a01b0382166000818152608a6020908152604091829020849055815184815291517fb78c51bc9bffa228585b84c38a0234fe0a48eb7aeb9f7a6a7a46f0ddd3270dd59281900390910190a25050565b608e5481565b60006144436154e8565b905090565b6065818154811061291d57600080fd5b606d546001600160a01b031681565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b60886020526000908152604090205460ff1681565b60876020526000908152604090205460ff1681565b6144b16151ce565b6001600160a01b03166144c2614439565b6001600160a01b03161461450b576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811661455e576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606f80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917e40167ea3901ef812c672b081813db3c0fc117c302ace151f1f9a907906e1669181900360200190a25050565b6145c26151ce565b6001600160a01b03166145d3614439565b6001600160a01b03161461461c576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6068546001600160a01b038281169116141561467f576040805162461bcd60e51b815260206004820152601c60248201527f47617264656e2056616c75657220616c72656164792065786973747300000000604482015290519081900360640190fd5b6001600160a01b0381166146da576040805162461bcd60e51b815260206004820152601860248201527f47617264656e2056616c756572206d7573742065786973740000000000000000604482015290519081900360640190fd5b606880546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917fb89b871cab0fe1b2d8c7cc3e16640ef9a9bf67f031e44947331820e025bf69479181900360200190a25050565b6060606680548060200260200160405190810160405280929190818152602001828054801561478f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614771575b5050505050905090565b6147a16151ce565b6001600160a01b03166147b2614439565b6001600160a01b0316146147fb576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6069546001600160a01b038281169116141561485e576040805162461bcd60e51b815260206004820152601b60248201527f5072696365206f7261636c6520616c7265616479206578697374730000000000604482015290519081900360640190fd5b6001600160a01b0381166148b9576040805162461bcd60e51b815260206004820152601760248201527f5072696365206f7261636c65206d757374206578697374000000000000000000604482015290519081900360640190fd5b606980546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f40bddd72ea96b80dae14e3d13e8ce2c4ecd2500d88c6c0004d24a00deab28f9c9181900360200190a25050565b606a546001600160a01b031681565b606c546001600160a01b031681565b608d5481565b608f5481565b6149486151ce565b6001600160a01b0316614959614439565b6001600160a01b0316146149a2576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b60995460ff16156149e45760405162461bcd60e51b815260040180806020018281038252602d815260200180615dbd602d913960400191505060405180910390fd5b6099805460ff19166001179055565b6149fb6151ce565b6001600160a01b0316614a0c614439565b6001600160a01b031614614a55576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b601460ff831610614aad576040805162461bcd60e51b815260206004820152601660248201527f4d6178206f7065726174696f6e73207265616368656400000000000000000000604482015290519081900360640190fd5b806001600160a01b031660728360ff1660148110614ac757fe5b01546001600160a01b03161415614b25576040805162461bcd60e51b815260206004820152601560248201527f4f7065726174696f6e20616c7265616479207365740000000000000000000000604482015290519081900360640190fd5b6001600160a01b038116614b80576040805162461bcd60e51b815260206004820152601d60248201527f4f7065726174696f6e2061646472657373206d7573742065786973742e000000604482015290519081900360640190fd5b8060728360ff1660148110614b9157fe5b0180546001600160a01b039283166001600160a01b03199091161790556040805191831682525160ff8416917f2dc23b4bb2132388a8a9f2d4a7ec650d42dcd4c1c63e6495756fa25e8ecc6abd919081900360200190a25050565b606f546001600160a01b031681565b6060606580548060200260200160405190810160405280929190818152602001828054801561478f576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311614771575050505050905090565b614c636151ce565b6001600160a01b0316614c74614439565b6001600160a01b031614614cbd576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116614d10576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606e80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f578086cc379999d712cf9ea4c177a02b092c028a84cf82d2dd590f2606b3169f9181900360200190a25050565b6071546001600160a01b031681565b614d846151ce565b6001600160a01b0316614d95614439565b6001600160a01b031614614dde576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b038116614e31576040805162461bcd60e51b8152602060048201526015602482015274041646472657373206d757374206e6f74206265203605c1b604482015290519081900360640190fd5b606a80546001600160a01b038381166001600160a01b031983168117909355604080519190921680825291519192917f1e3307b8b00f4ec731298a869e9665a2662abd65a0e3fe9dd01fd53c35b0ae939181900360200190a25050565b606e546001600160a01b031681565b614ea56151ce565b6001600160a01b0316614eb6614439565b6001600160a01b031614614eff576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b03811660009081526087602052604090205460ff1615614f6d576040805162461bcd60e51b815260206004820152601b60248201527f5265736572766520617373657420616c72656164792061646465640000000000604482015290519081900360640190fd5b6001600160a01b038116600081815260876020526040808220805460ff1916600190811790915560668054918201815583527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e943540180546001600160a01b03191684179055517f9fef46e320a4767c320315d2f597ee79c1e17c3c3330d026764d6a7dac8fcd5c9190a250565b608a6020526000908152604090205481565b608f5460905460915460925490919293565b6150256151ce565b6001600160a01b0316615036614439565b6001600160a01b03161461507f576040805162461bcd60e51b81526020600482018190526024820152600080516020615cdf833981519152604482015290519081900360640190fd5b6001600160a01b0381166150c45760405162461bcd60e51b8152600401808060200182810382526026815260200180615bd46026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b615128615b9f565b60408051610280810191829052607280546001600160a01b031682529091601490607360208501808311614771575050505050905090565b6001600160a01b031660009081526087602052604090205460ff1690565b6000805b601460ff821610156151c55760728160ff166014811061519e57fe5b01546001600160a01b03848116911614156151bd576001915050611cef565b600101615182565b50600092915050565b3390565b60606000806151e185856154f7565b9150915080615237576040805162461bcd60e51b815260206004820152601560248201527f41646472657373206e6f7420696e2061727261792e0000000000000000000000604482015290519081900360640190fd5b6000615243868461555d565b5093506118d192505050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526132979085906156c1565b8015806153765750604080517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561534857600080fd5b505afa15801561535c573d6000803e3d6000fd5b505050506040513d602081101561537257600080fd5b5051155b6153b15760405162461bcd60e51b8152600401808060200182810382526036815260200180615d876036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790526154319084906156c1565b505050565b600054610100900460ff168061544f575061544f615772565b8061545d575060005460ff16155b6154985760405162461bcd60e51b815260040180806020018281038252602e815260200180615cb1602e913960400191505060405180910390fd5b600054610100900460ff161580156154c3576000805460ff1961ff0019909116610100171660011790555b6154cb615783565b6154d3615823565b80156154e5576000805461ff00191690555b50565b6033546001600160a01b031690565b81516000908190815b8181101561554a57846001600160a01b031686828151811061551e57fe5b60200260200101516001600160a01b03161415615542579250600191506155569050565b600101615500565b50600019600092509250505b9250929050565b81516060906000908084106155b9576040805162461bcd60e51b815260206004820152601860248201527f496e646578206d757374206265203c2041206c656e6774680000000000000000604482015290519081900360640190fd5b60006001820367ffffffffffffffff811180156155d557600080fd5b506040519080825280602002602001820160405280156155ff578160200160208202803683370190505b50905060005b8581101561564d5786818151811061561957fe5b602002602001015182828151811061562d57fe5b6001600160a01b0390921660209283029190910190910152600101615605565b50600185015b8281101561569e5786818151811061566757fe5b602002602001015182600183038151811061567e57fe5b6001600160a01b0390921660209283029190910190910152600101615653565b50808686815181106156ac57fe5b60200260200101519350935050509250929050565b6000615716826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661591c9092919063ffffffff16565b8051909150156154315780806020019051602081101561573557600080fd5b50516154315760405162461bcd60e51b815260040180806020018281038252602a815260200180615d36602a913960400191505060405180910390fd5b600061577d30615935565b15905090565b600054610100900460ff168061579c575061579c615772565b806157aa575060005460ff16155b6157e55760405162461bcd60e51b815260040180806020018281038252602e815260200180615cb1602e913960400191505060405180910390fd5b600054610100900460ff161580156154d3576000805460ff1961ff00199091166101001716600117905580156154e5576000805461ff001916905550565b600054610100900460ff168061583c575061583c615772565b8061584a575060005460ff16155b6158855760405162461bcd60e51b815260040180806020018281038252602e815260200180615cb1602e913960400191505060405180910390fd5b600054610100900460ff161580156158b0576000805460ff1961ff0019909116610100171660011790555b60006158ba6151ce565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156154e5576000805461ff001916905550565b606061592b848460008561593b565b90505b9392505050565b3b151590565b60608247101561597c5760405162461bcd60e51b8152600401808060200182810382526026815260200180615c576026913960400191505060405180910390fd5b61598585615935565b6159d6576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b60208310615a145780518252601f1990920191602091820191016159f5565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114615a76576040519150601f19603f3d011682016040523d82523d6000602084013e615a7b565b606091505b5091509150615a8b828286615a96565b979650505050505050565b60608315615aa557508161592e565b825115615ab55782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015615aff578181015183820152602001615ae7565b50505050905090810190601f168015615b2c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b828054828255906000526020600020908101928215615b8f579160200282015b82811115615b8f57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190615b5a565b50615b9b929150615bbe565b5090565b6040518061028001604052806014906020820280368337509192915050565b5b80821115615b9b5760008155600101615bbf56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f6e7472696275746f72732063616e6e6f74206265206c657373207468616e2031207065722067617264656e6f6e6c7920706175736520677561726469616e20616e64206f776e65722063616e20706175736520676c6f62616c6c79416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f6e6c7920706175736520677561726469616e20616e64206f776e65722063616e20706175736520696e646976696475616c6c79496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726f6e6c7920706175736520677561726469616e20616e64206f776e65722063616e2075706461746520706175736520677561726469616e5361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645573657220646f6573206e6f742068617665206372656174696f6e207065726d697373696f6e735361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e636547617264656e206372656174696f6e20697320616c7265616479206f70656e20746f20746865207075626c6963a2646970667358221220a19a383d213cdae7047348b148a3a0ecfe589c1e3bb65eee744cf66b05bd29cb64736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addKeeper(address)": {
        "params": {
          "_keeper": "Address of the keeper"
        }
      },
      "addKeepers(address[])": {
        "params": {
          "_keepers": "List with keeprs of the assets to whitelist"
        }
      },
      "addReserveAsset(address)": {
        "params": {
          "_reserveAsset": "Address of the reserve assset"
        }
      },
      "createGarden(address,string,string,string,uint256,uint256[],uint256,bool[],uint256[])": {
        "params": {
          "_gardenParams": "Array of numeric garden params",
          "_initialContribution": "Initial contribution by the gardener",
          "_name": "Name of the Garden",
          "_profitSharing": "Custom profit sharing (if any)",
          "_publicGardenStrategistsStewards": "Public garden, public strategist rights and public stewards rights",
          "_reserveAsset": "Reserve asset of the Garden. Initially just weth",
          "_seed": "Seed to regenerate the garden NFT",
          "_symbol": "Symbol of the Garden",
          "_tokenURI": "Garden NFT token URI"
        }
      },
      "editGardenFactory(address)": {
        "params": {
          "_newGardenFactory": "Address of the new garden factory"
        }
      },
      "editGardenNFT(address)": {
        "params": {
          "_newGardenNFT": "Address of the new garden NFT"
        }
      },
      "editGardenValuer(address)": {
        "params": {
          "_gardenValuer": "Address of the new garden valuer"
        }
      },
      "editIshtarGate(address)": {
        "params": {
          "_ishtarGate": "Address of the new Ishtar Gate"
        }
      },
      "editLiquidityReserve(address,uint256)": {
        "params": {
          "_newMinLiquidityReserve": "Absolute min liquidity of an asset to grab price",
          "_reserve": "Address of the reserve to edit"
        }
      },
      "editMardukGate(address)": {
        "params": {
          "_mardukGate": "Address of the new Marduk Gate"
        }
      },
      "editPriceOracle(address)": {
        "params": {
          "_priceOracle": "Address of the new price oracle"
        }
      },
      "editRewardsDistributor(address)": {
        "params": {
          "_newRewardsDistributor": "Address of the new rewards distributor"
        }
      },
      "editStrategyFactory(address)": {
        "params": {
          "_newStrategyFactory": "Address of the new strategy factory"
        }
      },
      "editStrategyNFT(address)": {
        "params": {
          "_newStrategyNFT": "Address of the new strategy NFT"
        }
      },
      "editTreasury(address)": {
        "params": {
          "_newTreasury": "Address of the new protocol fee recipient"
        }
      },
      "getBABLSharing()": {
        "returns": {
          "_0": "Strategist, Stewards, Lps, creator bonus"
        }
      },
      "getProfitSharing()": {
        "returns": {
          "_0": "Strategist, Stewards, Lps, creator bonus"
        }
      },
      "isBetaStrategy(address[])": {
        "params": {
          "_strategies": "Smartcontract address to check for a global or specific pause"
        }
      },
      "isPaused(address)": {
        "params": {
          "_contract": "Smartcontract address to check for a global or specific pause"
        }
      },
      "isSystemContract(address)": {
        "params": {
          "_contractAddress": "The contract address to check"
        }
      },
      "removeGarden(address)": {
        "params": {
          "_garden": "Address of the Garden contract to remove"
        }
      },
      "removeKeeper(address)": {
        "params": {
          "_keeper": "Address of the keeper"
        }
      },
      "removeReserveAsset(address)": {
        "params": {
          "_reserveAsset": "Address of the reserve asset to remove"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setGlobalPause(bool)": {
        "params": {
          "_state": "True to pause, false to unpause."
        }
      },
      "setMasterSwapper(address)": {
        "params": {
          "_newDefaultMasterSwapper": "Address of the new default trade integration"
        }
      },
      "setOperation(uint8,address)": {
        "params": {
          "_kind": "Operation kind",
          "_operation": "Address of the operation contract to set"
        }
      },
      "setPauseGuardian(address)": {
        "params": {
          "_guardian": "Address of the guardian"
        }
      },
      "setSomePause(address[],bool)": {
        "params": {
          "_address": "Addresses of protocol smartcontract to be paused",
          "_state": "Boolean pause state"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "ActionPaused(string,bool)": {
        "notice": "Emitted when an action is paused globally"
      },
      "ActionPausedIndividually(string,address,bool)": {
        "notice": "Emitted when an action is paused individually"
      },
      "NewPauseGuardian(address,address)": {
        "notice": "Emitted when pause guardian is changed"
      }
    },
    "kind": "user",
    "methods": {
      "addKeeper(address)": {
        "notice": "PRIVILEGED FACTORY FUNCTION. Adds a new valid keeper to the list"
      },
      "addKeepers(address[])": {
        "notice": "PRIVILEGED FACTORY FUNCTION. Adds a list of assets to the whitelist"
      },
      "addReserveAsset(address)": {
        "notice": "PRIVILEGED FACTORY FUNCTION. Adds a new valid reserve asset for gardens"
      },
      "createGarden(address,string,string,string,uint256,uint256[],uint256,bool[],uint256[])": {
        "notice": "Creates a Garden smart contract and registers the Garden with the controller. If asset is not WETH, the creator needs to approve the controller"
      },
      "editGardenFactory(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol garden factory"
      },
      "editGardenNFT(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol garden NFT"
      },
      "editGardenValuer(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the garden valuer"
      },
      "editIshtarGate(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the Ishtar Gate Address"
      },
      "editLiquidityReserve(address,uint256)": {
        "notice": "GOVERNANCE FUNCTION: Edits the minimum liquidity an asset must have on Uniswap"
      },
      "editMardukGate(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the Marduk Gate Address"
      },
      "editPriceOracle(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to change the price oracle"
      },
      "editRewardsDistributor(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the rewards distributor"
      },
      "editStrategyFactory(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol strategy factory"
      },
      "editStrategyNFT(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol strategy NFT"
      },
      "editTreasury(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol fee recipient"
      },
      "enableBABLMiningProgram()": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Enable and starts the BABL Mining program by the Rewards Distributor Can only happen after public launch of the protocol."
      },
      "enableGardenTokensTransfers()": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows transfers of ERC20 gardenTokens Can only happen after 2021 is finished."
      },
      "getBABLSharing()": {
        "notice": "Returns the percentages of BABL Profit Sharing"
      },
      "getProfitSharing()": {
        "notice": "Returns the percentages of a strategy Profit Sharing"
      },
      "initialize()": {
        "notice": "Initializes the initial fee recipient on deployment."
      },
      "isBetaStrategy(address[])": {
        "notice": "Check whether or not the strategies are beta protocol strategies deserving rewards"
      },
      "isPaused(address)": {
        "notice": "Check whether or not there is a global pause or a specific pause of the provided contract address"
      },
      "isSystemContract(address)": {
        "notice": "Check if a contract address is a garden or one of the system contracts"
      },
      "openPublicGardenCreation()": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to enable public creation of gardens"
      },
      "removeGarden(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to remove a Garden"
      },
      "removeKeeper(address)": {
        "notice": "PRIVILEGED FACTORY FUNCTION. Removes a keeper"
      },
      "removeReserveAsset(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to remove a reserve asset"
      },
      "setAllowPublicGardens()": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows public gardens"
      },
      "setGlobalPause(bool)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Pause the protocol globally in case of unexpected issue Only the governance can unpause it"
      },
      "setMasterSwapper(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Allows governance to edit the protocol default trde integration"
      },
      "setMaxContributorsPerGarden(uint256)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Change the max number of contributors for new Gardens since the change"
      },
      "setOperation(uint8,address)": {
        "notice": "GOVERNANCE FUNCTION: Edit an existing operation on the registry"
      },
      "setPauseGuardian(address)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Set-up a pause guardian"
      },
      "setSomePause(address[],bool)": {
        "notice": "PRIVILEGED GOVERNANCE FUNCTION. Pause some smartcontracts in a batch process in case of unexpected issue Only the governance can unpause it"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 492,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 495,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1447,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 129,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 8998,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "gardens",
        "offset": 0,
        "slot": "101",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 9001,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "reserveAssets",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 9003,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "uniswapFactory",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      },
      {
        "astId": 9006,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "gardenValuer",
        "offset": 0,
        "slot": "104",
        "type": "t_address"
      },
      {
        "astId": 9009,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "priceOracle",
        "offset": 0,
        "slot": "105",
        "type": "t_address"
      },
      {
        "astId": 9012,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "gardenFactory",
        "offset": 0,
        "slot": "106",
        "type": "t_address"
      },
      {
        "astId": 9015,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "rewardsDistributor",
        "offset": 0,
        "slot": "107",
        "type": "t_address"
      },
      {
        "astId": 9018,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "ishtarGate",
        "offset": 0,
        "slot": "108",
        "type": "t_address"
      },
      {
        "astId": 9021,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "strategyFactory",
        "offset": 0,
        "slot": "109",
        "type": "t_address"
      },
      {
        "astId": 9024,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "gardenNFT",
        "offset": 0,
        "slot": "110",
        "type": "t_address"
      },
      {
        "astId": 9027,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "strategyNFT",
        "offset": 0,
        "slot": "111",
        "type": "t_address"
      },
      {
        "astId": 9031,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "enabledIntegrations",
        "offset": 0,
        "slot": "112",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 9034,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "masterSwapper",
        "offset": 0,
        "slot": "113",
        "type": "t_address"
      },
      {
        "astId": 9039,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "enabledOperations",
        "offset": 0,
        "slot": "114",
        "type": "t_array(t_address)20_storage"
      },
      {
        "astId": 9044,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "isGarden",
        "offset": 0,
        "slot": "134",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9048,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "validReserveAsset",
        "offset": 0,
        "slot": "135",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9052,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "assetWhitelist",
        "offset": 0,
        "slot": "136",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9056,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "keeperList",
        "offset": 0,
        "slot": "137",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9061,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "minLiquidityPerReserve",
        "offset": 0,
        "slot": "138",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9064,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "treasury",
        "offset": 0,
        "slot": "139",
        "type": "t_address"
      },
      {
        "astId": 9066,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "strategistProfitPercentage",
        "offset": 0,
        "slot": "140",
        "type": "t_uint256"
      },
      {
        "astId": 9068,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "stewardsProfitPercentage",
        "offset": 0,
        "slot": "141",
        "type": "t_uint256"
      },
      {
        "astId": 9070,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "lpsProfitPercentage",
        "offset": 0,
        "slot": "142",
        "type": "t_uint256"
      },
      {
        "astId": 9072,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "strategistBABLPercentage",
        "offset": 0,
        "slot": "143",
        "type": "t_uint256"
      },
      {
        "astId": 9074,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "stewardsBABLPercentage",
        "offset": 0,
        "slot": "144",
        "type": "t_uint256"
      },
      {
        "astId": 9076,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "lpsBABLPercentage",
        "offset": 0,
        "slot": "145",
        "type": "t_uint256"
      },
      {
        "astId": 9078,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "gardenCreatorBonus",
        "offset": 0,
        "slot": "146",
        "type": "t_uint256"
      },
      {
        "astId": 9081,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "gardenTokensTransfersEnabled",
        "offset": 0,
        "slot": "147",
        "type": "t_bool"
      },
      {
        "astId": 9084,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "bablMiningProgramEnabled",
        "offset": 1,
        "slot": "147",
        "type": "t_bool"
      },
      {
        "astId": 9087,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "allowPublicGardens",
        "offset": 2,
        "slot": "147",
        "type": "t_bool"
      },
      {
        "astId": 9090,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "protocolPerformanceFee",
        "offset": 0,
        "slot": "148",
        "type": "t_uint256"
      },
      {
        "astId": 9093,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "protocolManagementFee",
        "offset": 0,
        "slot": "149",
        "type": "t_uint256"
      },
      {
        "astId": 9095,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "protocolDepositGardenTokenFee",
        "offset": 0,
        "slot": "150",
        "type": "t_uint256"
      },
      {
        "astId": 9097,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "protocolWithdrawalGardenTokenFee",
        "offset": 0,
        "slot": "151",
        "type": "t_uint256"
      },
      {
        "astId": 9100,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "maxContributorsPerGarden",
        "offset": 0,
        "slot": "152",
        "type": "t_uint256"
      },
      {
        "astId": 9103,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "gardenCreationIsOpen",
        "offset": 0,
        "slot": "153",
        "type": "t_bool"
      },
      {
        "astId": 9105,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "guardian",
        "offset": 1,
        "slot": "153",
        "type": "t_address"
      },
      {
        "astId": 9110,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "guardianPaused",
        "offset": 0,
        "slot": "154",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9113,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "guardianGlobalPaused",
        "offset": 0,
        "slot": "155",
        "type": "t_bool"
      },
      {
        "astId": 9116,
        "contract": "contracts/BabController.sol:BabControllerV7",
        "label": "mardukGate",
        "offset": 1,
        "slot": "155",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)20_storage": {
        "base": "t_address",
        "encoding": "inplace",
        "label": "address[20]",
        "numberOfBytes": "640"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}